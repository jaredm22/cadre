{
  "version": 3,
  "sources": [
    "apiHandle.js",
    "components/Day.js",
    "features/calendar/Calendar.js",
    "components/HeaderNav.js",
    "App.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "getStudents",
    "a",
    "axios",
    "get",
    "response",
    "data",
    "getStudentByEmail",
    "email",
    "method",
    "url",
    "createStudent",
    "firstName",
    "lastName",
    "deleteStudent",
    "getProfessors",
    "getProfessorByEmail",
    "createProfessor",
    "deleteProfessor",
    "getCourses",
    "getLectures",
    "getModifiedLecture",
    "courseId",
    "date",
    "lectureDate",
    "getLabs",
    "Day",
    "props",
    "state",
    "lectures",
    "labs",
    "assignments",
    "student",
    "expand",
    "test",
    "this",
    "courses",
    "filter",
    "course",
    "days",
    "includes",
    "day",
    "startDate",
    "parse",
    "Date",
    "endDate",
    "startTime",
    "endTime",
    "lab",
    "setState",
    "hours",
    "getHours",
    "minutes",
    "getMinutes",
    "Grid",
    "className",
    "Row",
    "today",
    "map",
    "courseName",
    "section",
    "parseTime",
    "zoomLink",
    "id",
    "React",
    "Component",
    "Calendar",
    "setDayRef",
    "el",
    "expandRef",
    "daysrefs",
    "push",
    "console",
    "log",
    "dataLoaded",
    "format",
    "createRef",
    "api",
    "then",
    "index",
    "setexpand",
    "wrapper",
    "day_list",
    "i",
    "month",
    "getDate",
    "year",
    "ref",
    "addDays",
    "narrow",
    "aria-label",
    "Column",
    "lg",
    "md",
    "sm",
    "Slider",
    "ariaLabelInput",
    "max",
    "min",
    "value",
    "onChange",
    "handleclick",
    "expandDay",
    "bind",
    "onClick",
    "HeaderNav",
    "SideNav",
    "isFixedNav",
    "expanded",
    "isChildOfHeader",
    "App",
    "Content",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.1c868155.chunk.js",
  "sourcesContent": [
    "import axios from \"axios\";\n\n// var config = {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//   },\n// };\n\nconst getStudents = async () => {\n  const response = await axios.get(\"/students\");\n  return response.data;\n};\n\nconst getStudentByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getStudent\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createStudent = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/students\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteStudent = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/students\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getProfessors = async () => {\n  const response = await axios.get(\"/professor\");\n  return response.data;\n};\n\nconst getProfessorByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getProfessor\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createProfessor = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/professors\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteProfessor = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/professors\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getCourses = async () => {\n  const response = await axios.get(\"/courses\");\n  return response.data;\n};\n\nconst getLectures = async () => {\n  const response = await axios.get(\"/lectures\");\n  return response.data;\n};\n\nconst getModifiedLecture = async (courseId, date) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getLecture\",\n    data: { courseId: courseId, lectureDate: date },\n  });\n  return response.data;\n};\n\nconst getLabs = async () => {\n  const response = await axios.get(\"/labs\");\n  return response.data;\n};\n\nexport default {\n  getStudents,\n  getStudentByEmail,\n  createStudent,\n  deleteStudent,\n  getProfessors,\n  getProfessorByEmail,\n  createProfessor,\n  deleteProfessor,\n  getCourses,\n  getLectures,\n  getModifiedLecture,\n  getLabs,\n};\n",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport api from \"../apiHandle\";\nimport { parse, getHours, getMinutes, format } from \"date-fns\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lectures: [],\n      labs: [],\n      assignments: [],\n      student: this.props.student,\n      expand: \"no-expand\", //classname to add to day component to indicate css transition\n    };\n    this.test = false;\n  }\n\n  componentDidMount() {\n    // this.checkModifiedLecture(1, \"2021-03-22\").then(res => console.log(res) )\n\n    // const currentDay = format(new Date(this.props.year, this.props.month, this.props.date), 'yyyy-MM-dd')\n    // console.log(currentDay)\n\n    const lectures = this.props.student.courses.filter((course) => {\n      if (course.days.includes(this.props.day)) {\n        course.startDate = parse(course.startDate, \"yyyy-MM-dd\", new Date());\n        course.endDate = parse(course.endDate, \"yyyy-MM-dd\", new Date());\n        course.startTime = parse(course.startTime, \"HH:mm\", new Date());\n        course.endTime = parse(course.endTime, \"HH:mm\", new Date());\n        return course;\n      }\n    });\n\n    const labs = this.props.student.labs.filter((lab) => {\n      if (lab.days.includes(this.props.day)) {\n        lab.startTime = parse(lab.startTime, \"HH:mm\", new Date());\n        lab.endTime = parse(lab.endTime, \"HH:mm\", new Date());\n        return lab;\n      }\n    });\n\n    this.setState({\n      lectures: lectures,\n      labs: labs,\n    });\n  }\n\n  // Check to see if modified lecture exists, if not, return lecture object\n  // checklecture(courseId, date) {\n  //     const lectures = this.props.student.courses.filter( course => {\n  //         const currentDay = format(new Date(String(this.props.year), String(this.props.month), String(this.props.date)), 'yyyy-MM-dd')\n  //         console.log(currentDay)\n\n  //         if (course.days.includes(this.props.day) ) {\n  //             course.startDate = parse(course.startDate, 'yyyy-MM-dd', new Date())\n  //             course.endDate = parse(course.endDate, 'yyyy-MM-dd', new Date())\n  //             course.startTime = parse(course.startTime, 'HH:mm', new Date())\n  //             course.endTime = parse(course.endTime, 'HH:mm', new Date())\n  //             return course\n  //         }\n  //     })\n  //     return lectures\n  // }\n\n  parseTime(date) {\n    let hours = getHours(date);\n    let minutes = getMinutes(date);\n\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes == 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  }\n\n  render() {\n    var { lectures, labs } = this.state;\n\n    return (\n      <Grid className={this.state.expand}>\n        <Row>\n          <div className={this.props.today ? \"blue\" : \"black\"}>\n            <h3>{this.props.day}</h3>\n          </div>\n        </Row>\n\n        <Row>\n          <div className={this.props.today ? \"blue\" : \"black\"}>\n            <h4>{this.props.date}</h4>\n          </div>\n        </Row>\n\n        {lectures.map((course) => {\n          return (\n            <Row key={course.id} className=\"course\">\n              <h4>\n                {course.courseId +\n                  \" - \" +\n                  course.courseName +\n                  \" \" +\n                  course.section}\n              </h4>\n              <br></br>\n              <h5>\n                {\"Lecture Time: \" +\n                  this.parseTime(course.startTime) +\n                  \" - \" +\n                  this.parseTime(course.endTime)}\n              </h5>\n              <br></br>\n              <h5>{\"Zoom Link: \" + course.zoomLink}</h5>\n              <br></br>\n            </Row>\n          );\n        })}\n\n        {labs.map((lab) => {\n          return (\n            <Row key={lab.id} className=\"lab\">\n              <h4>\n                {lab.course.courseId +\n                  \" - \" +\n                  lab.course.courseName +\n                  \" \" +\n                  lab.course.section}\n              </h4>\n              <br></br>\n              <h5>\n                {\"Lecture Time: \" +\n                  this.parseTime(lab.startTime) +\n                  \" - \" +\n                  this.parseTime(lab.endTime)}\n              </h5>\n              <br></br>\n              <h5>{\"Zoom Link: \" + lab.zoomLink}</h5>\n              <br></br>\n            </Row>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nexport default Day;\n",
    "import React from \"react\";\nimport { Slider, Grid, Row, Column } from \"carbon-components-react\";\nimport { addDays, format } from \"date-fns\";\nimport Day from \"../../components/Day\";\nimport \"./calendar.scss\";\nimport api from \"../../apiHandle\";\n\n//TODO: keep expand state in calendar component to check if at most one\n//Day component is working\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date(),\n      days: 3,\n      dataLoaded: false,\n      student: [],\n      expand: \"no-expand\",\n    };\n    this.date = format(this.state.today, \"d\");\n    this.expandRef = React.createRef();\n    this.daysrefs = {};\n  }\n\n  setDayRef = (el) => {\n    this.expandRef = el;\n    this.daysrefs.push(this.expandRef);\n    console.log(el);\n  };\n\n  shouldComponentUpdate() {\n    return this.state.days > 0;\n  }\n\n  hello() {\n    console.log(\"I was triggered during render\");\n  }\n\n  componentDidMount() {\n    api.getStudentByEmail(\"jmin@bu.edu\").then((student) => {\n      console.log(student);\n      this.setState({\n        dataLoaded: true,\n        student: student,\n      });\n    });\n  }\n\n  expandDay(day, index) {\n    // console.log(index)\n    // console.log(day)\n    // if (day > 0 && day < 4) {\n    const wrapper = this.daysrefs[day].state;\n    var setexpand;\n\n    if (this.state.expand === \"no-expand\") {\n      setexpand = wrapper.expand === \"no-expand\" ? \"is-expanded\" : \"no-expand\";\n    } else {\n    }\n\n    this.daysrefs[day].setState({ expand: setexpand });\n    console.log(this.daysrefs);\n    console.log(this.daysrefs[day].props.className);\n    // wrapper.className = wrapper.className.includes('is-expanded') ? 'a-day' : 'a-day is-expanded'\n    // }\n  }\n\n  render() {\n    const day_list = [];\n\n    if (this.state.dataLoaded) {\n      for (let i = 0; i < this.state.days; i++) {\n        let day =\n          i === 0 ? (\n            <Day\n              key={i}\n              // className=\"today\"\n              today={true}\n              month={format(this.state.today, \"LLL\")}\n              date={this.state.today.getDate()}\n              day={format(this.state.today, \"EEE\")}\n              year={format(this.state.today, \"yyyy\")}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              student={this.state.student}\n            />\n          ) : (\n            <Day\n              key={i}\n              // className={this.state.expand}\n              today={false}\n              month={format(addDays(this.state.today, i), \"LLL\")}\n              date={addDays(this.state.today, i).getDate()}\n              day={format(addDays(this.state.today, i), \"EEE\")}\n              year={format(addDays(this.state.today, i), \"yyyy\")}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              student={this.state.student}\n            />\n          );\n        day_list.push(day);\n      }\n    }\n\n    return (\n      <Grid className=\"bx--grid calendar-contain\" narrow={true}>\n        <Row>\n          {/*TODO: do a terneary operation is addDay.month == this.date.month ? show new month after emdash : don't show month */}\n          <h4 aria-label=\"calendar\" className=\"calendar-title\">\n            {\" \"}\n            {format(this.state.today, \"LLLL\")} {this.date}\n            {this.state.days > 1\n              ? \" — \" +\n                format(addDays(this.state.today, this.state.days), \"LLLL\") +\n                \" \" +\n                addDays(this.state.today, this.state.days - 1).getDate()\n              : \"\"}\n          </h4>\n        </Row>\n\n        <Row className=\"slider-row\">\n          <Column lg={4} md={2} sm={0}>\n            <div>\n              <p>{this.state.days} days</p>\n              <Slider\n                ariaLabelInput=\"day slider\"\n                className=\"day-slider \"\n                max={5}\n                min={1}\n                value={3}\n                onChange={({ value }) => this.setState({ days: value })}\n              />\n            </div>\n          </Column>\n        </Row>\n\n        <Row className=\"date-head\">\n          {day_list.map((el, index) => {\n            let handleclick = this.expandDay.bind(this, index);\n\n            return (\n              <Column\n                key={el.props.date}\n                className={\"a-day \" + this.state.expand}\n                onClick={handleclick}\n              >\n                {el}\n\n                {/* {el} */}\n              </Column>\n            );\n          })}\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Calendar;\n",
    "import { SideNav } from \"carbon-components-react\";\n\nfunction HeaderNav() {\n  return (\n    <div className=\"App\">\n      <SideNav\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\"\n      ></SideNav>\n    </div>\n  );\n}\n\nexport default HeaderNav;\n",
    "import \"./App.scss\";\n// import getHello from \"./apiHandle\"\n// import React, { useState, useEffect } from 'react';\nimport Calendar from \"./features/calendar/Calendar\";\nimport HeaderNav from \"./components/HeaderNav\";\nimport { Content } from \"carbon-components-react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* TODO: collapsible nav and grid-expand transition */}\n      <HeaderNav />\n      <Content>\n        <Calendar />\n      </Content>\n    </div>\n  );\n}\n\nexport default App;\n",
    "const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n// import 'node_modules/core-js/modules/es7.array.includes';\n// import 'node_modules/core-js/modules/es6.array.fill';\n// import 'node_modules/core-js/modules/es6.string.includes';\n// import 'node_modules/core-js/modules/es6.string.trim';\n// import 'node_modules/core-js/modules/es7.object.values';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
