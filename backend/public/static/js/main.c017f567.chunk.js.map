{"version":3,"sources":["apiHandle.js","components/LectureCard.js","components/AssignmentCard.js","components/ExamCard.js","components/Day.js","pages/schedule/Calendar.js","assets/logo.png","components/HeaderNav.js","pages/schedule/SchedulePage.js","pages/login/LoginForm.js","pages/login/LoginPage.js","pages/signup/SignupForm.js","pages/signup/SignupPage.js","pages/createCourse/CreateCourseForm.js","pages/createCourse/CreateCoursePage.js","pages/createAssignment/CreateAssignmentForm.js","pages/createAssignment/CreateAssignmentPage.js","pages/assignments/AssignmentsView.js","pages/assignments/AssignmentsPage.js","pages/exams/ExamsView.js","pages/exams/ExamsPage.js","App.js","reportWebVitals.js","index.js"],"names":["getStudents","a","axios","get","response","data","getStudentByEmail","email","method","url","createStudent","firstName","lastName","deleteStudent","getProfessors","getProfessorByEmail","createProfessor","deleteProfessor","getCourses","createCourse","courseId","courseName","section","school","zoomLink","days","startDate","endDate","startTime","endTime","lectureStyle","createCourseStudent","studentId","getLectures","getModifiedLecture","date","lectureDate","getLabs","createAssignment","name","assignmentType","assignedDate","assignedTime","dueDate","dueTime","tags","parseTime","split","sh","sm","eh","em","LectureCard","React","forwardRef","props","ref","className","onClick","handleclick","course","target","rel","href","style","display","expand","showFull","piazzaLink","id","AssignmentCard","format","parse","Date","time","hours","minutes","Course","map","t","ExamCard","console","log","Badge","type","assignments","length","to","pathname","state","user","exams","DayHeader","today","fullDate","Day","getHours","getMinutes","setLectureRef","el","expandRef","daysrefs","push","showMoreRef","lectures","labs","all","prevExpand","syllabusView","rightSide","colWidth","test","courserefs","this","width","getEWidth","setState","courses","filter","includes","day","lab","forEach","assignment","parseISO","isSameDay","exam","index","e","stopPropagation","prevState","elem","document","querySelector","clientWidth","section_css","transform","i","right_side_css","Breadcrumbs","aria-label","Link","color","concat","sort","l1","l2","showMore","bind","flexDirection","margin","marginTop","overflow","textAlign","isSameWeek","Component","Calendar","daySliderHandler","value","dataLoaded","wrapper","dayidx","entries","findExpandedDay","expandDay","day_list","month","getDate","addDays","Grid","narrow","Row","Column","Slider","ariaLabelInput","max","min","onChange","changeDayVal","lg","Math","floor","HeaderNav","SideNav","isFixedNav","expanded","isChildOfHeader","src","logo","height","SchedulePage","location","useLocation","Content","LoginForm","useState","handleEmailChange","handleUserSelect","history","useHistory","Form","onSubmit","event","api","then","res","alert","preventDefault","FormGroup","legendText","TextInput","placeholdertext","helperText","labelText","label","Select","hideLabel","text","option","SelectItem","Button","variant","LoginPage","SignupForm","handleFirstNameChange","handleLastNameChange","SignupPage","CreateCourseForm","Monday","Tuesday","Wednesday","Thursday","Friday","startTimeSelect","endTimeSelect","onLectureStyleChange","onSchoolChange","handleTextInputChange","handleTimeInput","onStartTimeSelect","onEndTimeSelect","handleDaySelect","checked","currentDayState","schoolOptions","lectureStyleOptions","submitHandler","parsedDays","slice","TimePicker","placeholder","TimePickerSelect","maxLength","Checkbox","CreateCoursePage","CreateAssignmentForm","handleNameInput","handleTypeInput","handleDueDateInput","handleDueTimeInput","dueTimeSelect","handleDueTimeSelect","DatePicker","datePickerType","dateFormat","DatePickerInput","CreateAssignmentPage","ClassColumn","a1","a2","AssignmentsView","class","c","e1","e2","ExamsView","ExamsPage","App","exact","path","component","AssignmentsPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c017f567.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// var config = {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//   },\n// };\n\nconst getStudents = async () => {\n  const response = await axios.get(\"/students\");\n  return response.data;\n};\n\nconst getStudentByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getStudent\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createStudent = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/students\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteStudent = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/students\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getProfessors = async () => {\n  const response = await axios.get(\"/professor\");\n  return response.data;\n};\n\nconst getProfessorByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getProfessor\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createProfessor = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/professors\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteProfessor = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/professors\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getCourses = async () => {\n  const response = await axios.get(\"/courses\");\n  return response.data;\n};\n\nconst createCourse = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n    },\n  });\n  return response.data;\n};\n\nconst createCourseStudent = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle,\n  studentId\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/addCourseStudent\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n      studentId: studentId,\n    },\n  });\n  return response.data;\n};\n\nconst getLectures = async () => {\n  const response = await axios.get(\"/lectures\");\n  return response.data;\n};\n\nconst getModifiedLecture = async (courseId, date) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getLecture\",\n    data: { courseId: courseId, lectureDate: date },\n  });\n  return response.data;\n};\n\nconst getLabs = async () => {\n  const response = await axios.get(\"/labs\");\n  return response.data;\n};\n\nconst createAssignment = async (\n  courseId,\n  name,\n  assignmentType,\n  assignedDate,\n  assignedTime,\n  dueDate,\n  dueTime,\n  tags\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId,\n      name,\n      assignmentType,\n      assignedDate,\n      assignedTime,\n      dueDate,\n      dueTime,\n      tags,\n    },\n  });\n  return response.data;\n};\n\nexport default {\n  getStudents,\n  getStudentByEmail,\n  createStudent,\n  createCourseStudent,\n  deleteStudent,\n  getProfessors,\n  getProfessorByEmail,\n  createProfessor,\n  deleteProfessor,\n  getCourses,\n  createCourse,\n  getLectures,\n  getModifiedLecture,\n  getLabs,\n  createAssignment,\n};\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parseISO, getHours, getMinutes, format } from \"date-fns\";\n// import React, { useState } from \"react\";\nimport React from \"react\";\n\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (startTime, endTime) => {\n  const [sh, sm] = startTime.split(\":\");\n  const [eh, em] = endTime.split(\":\");\n\n  if (sh < 12 && eh >= 12) {\n    return sh + \":\" + sm + \" AM - \" + eh + \":\" + em + \" PM\";\n  } else if (sh < 12) {\n    return sh + \":\" + sm + \" - \" + eh + \":\" + em + \" AM\";\n  } else {\n    return (\n      (sh == 12 ? sh : sh - 12) +\n      \":\" +\n      sm +\n      \" - \" +\n      (eh == 12 ? eh : eh - 12) +\n      \":\" +\n      em +\n      \" PM\"\n    );\n  }\n};\n\nconst LectureCard = React.forwardRef((props, ref) => {\n  // const [syllabusView, setView] = useState(false);\n  // console.log(props);\n\n  //need to add 'button' to these things\n\n  return (\n    <div\n      key={props.id}\n      className=\"course\"\n      onClick={props.handleclick}\n      ref={ref}\n    >\n      {props.courseName != null ? (\n        <div className=\"fullname-course\">\n          <h4 className=\"black\"> {props.courseId} </h4>\n        </div>\n      ) : (\n        <div className=\"fullname-course\">\n          <h5 className=\"black\">{props.course.courseId + \" | Lab\"}</h5>\n        </div>\n      )}\n\n      <div\n        className=\"fullname-course\"\n        // style={{ overflow: \"hidden\"}}\n      >\n        <h5 className=\"black\">{props.courseName}</h5>\n      </div>\n\n      <div className=\"time\">\n        <h5>{parseTime(props.startTime, props.endTime)} </h5>\n      </div>\n\n      <br></br>\n\n      <div className=\"zoomlink\">\n        <a\n          className=\"blue\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={props.zoomLink}\n        >\n          Zoom Link\n        </a>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        <ul>\n          <li>\n            <a\n              className=\"black\"\n              style={{ display: props.showFull ? \"block\" : \"none\" }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"blackboard.com\"\n            >\n              Lecture Slides\n            </a>\n          </li>\n\n          <li>\n            {props.piazzaLink != null ? (\n              <a\n                className=\"black\"\n                style={{ display: props.showFull ? \"block\" : \"none\" }}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={props.piazzaLink}\n              >\n                Piazza\n              </a>\n            ) : (\n              false\n            )}\n          </li>\n\n          <li>Assignments</li>\n          <li>Office hours</li>\n        </ul>\n\n        {/* <div \n          className=\"right-side\"\n          style={{ display: props.syllabusView ? \"block\" : \"none\" }}>\n            <h1>HI</h1>\n            <h1>showExtra</h1>\n        </div> */}\n      </div>\n    </div>\n  );\n});\n\nexport default LectureCard;\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parseISO, getDate, getMonth, format, parse } from \"date-fns\";\nimport React from \"react\";\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\" && minutes === \"00\") {\n    return \"Noon\";\n  } else {\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes == 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  }\n};\n\nexport default function AssignmentCard(props) {\n  const dueDate = format(\n    parse(props.dueDate, \"yyyy-MM-d\", new Date()),\n    \"MMM do\"\n  );\n  const dueTime = parseTime(props.dueTime);\n\n  return (\n    <div key={props.id} className=\"assignment\">\n      <div>\n        <h6>{props.Course.courseId}</h6>\n        {/* <h6>{props.Course.courseName}</h6> */}\n        <h4>{props.name}</h4>\n        <br></br>\n        <h6>{\"Due: \" + dueDate + \" - \" + dueTime}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        {props.tags.map((t) => {\n          return <button className=\"tag\">{t}</button>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parse, format } from \"date-fns\";\nimport React from \"react\";\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  return (\n    (hours >= 13 ? hours - 12 : hours) +\n    \":\" +\n    (minutes == 0 ? \"00\" : minutes) +\n    (hours >= 12 ? \" PM\" : \" AM\")\n  );\n};\n\nexport default function ExamCard(props) {\n  const dueDate = format(\n    parse(props.dueDate, \"yyyy-MM-d\", new Date()),\n    \"MMM do\"\n  );\n  const dueTime = parseTime(props.dueTime);\n  console.log(props);\n\n  return (\n    <div key={props.id} className=\"assignment\">\n      <div>\n        <h4>{props.Course.courseId}</h4>\n        {/* <h6>{props.Course.courseName}</h6> */}\n        <h4>{props.name}</h4>\n        <br></br>\n        <h6>{\"Date: \" + dueDate}</h6>\n        <h6>{\"Time: \" + dueTime}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        {props.tags.map((t) => {\n          return <button className=\"tag\">{t}</button>;\n        })}\n      </div>\n    </div>\n\n    // <div key={props.id} className=\"exam\">\n    //   <div className=\"time\">\n    //     <h5>{dueTime}</h5>\n    //   </div>\n\n    //   <div className=\"course-id\">\n    //     <h4>{props.Course.courseId + (props.showFull ? \" |  Exam\" : \"\")}</h4>\n    //   </div>\n\n    //   <div className=\"fullname-exam\">\n    //     <h6>{props.name}</h6>\n    //   </div>\n\n    //   <div\n    //     className=\"xtra-info\"\n    //     style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n    //   >\n    //     <ul>\n    //       <li>{props.tags.map((tag) => tag).join(\", \")}</li>\n    //     </ul>\n    //   </div>\n    // </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport LinkUI from \"@material-ui/core/Link\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../apiHandle\";\nimport {\n  parseISO,\n  getHours,\n  getMinutes,\n  getDate,\n  getMonth,\n  getDay,\n  isSameDay,\n  isSameWeek,\n  compareAsc,\n  isThisHour,\n  format,\n  formatRelative,\n} from \"date-fns\";\nimport LectureCard from \"./LectureCard\";\nimport AssignmentCard from \"./AssignmentCard\";\nimport ExamCard from \"./ExamCard\";\n\n// function SyllabusView(props) {\n//   var viewType = props.viewType;\n//   const user = props.user;\n\n//   const assignments = [];\n//     user.courses.forEach((course) => {\n//       course.assignments.forEach((assignment) => {\n//         assignments.push(assignment);\n//       });\n//     });\n\n//   return (\n//     <div className=\"syllabus-view\" style={props.right_side_css}>\n//       {assignments.map( assignment => {\n//         <AssignmentCard\n//           {...assignment}\n//           parseTime={(time) => this.parseTime(time)}\n//           expand={props.expand} //bool to toggle expanded view\n//           showFull={props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n//           handleclick={props.showMore} //show right hand side when clicked inside expanded view\n//           syllabusView={props.syllabusView} //bool to toggle right-hand side details\n//         />\n//       })}\n//       RIGHT_SIDE_VIEW\n//     </div>\n//   );\n// }\n\nfunction Badge(props) {\n  console.log(props);\n  if (props.type === \"assignments\") {\n    if (props.assignments.length != 0) {\n      return (\n        <button className=\"badge assignments\">\n          <Link\n            className=\"badge link\"\n            to={{\n              pathname: \"/assignments\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h6>\n              {props.assignments.length} Assignment\n              {props.assignments.length == 1 ? false : \"s\"} Due\n            </h6>\n          </Link>\n        </button>\n      );\n    } else {\n      return null;\n    }\n  } else if (props.type === \"exams\") {\n    if (props.exams.length != 0) {\n      return (\n        <button className=\"badge exams\">\n          <Link\n            className=\"badge link\"\n            to={{\n              pathname: \"/exams\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h6>\n              {props.exams.length} Exam\n              {props.exams.length == 1 ? false : \"s\"} Due\n            </h6>\n          </Link>\n        </button>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction DayHeader(props) {\n  let style = {};\n  let date = \"\";\n  if (props.expand === \"is-expanded\") {\n    style = { \"text-align\": \"left\", display: \"flex\", \"flex-direction\": \"row\" };\n    return (\n      <div className={props.today ? \"date-today\" : \"date\"} style={style}>\n        <h4 className=\"clndr-day\">\n          {format(props.fullDate, \"eeee',' LLLL do\")}\n        </h4>\n      </div>\n    );\n  } else {\n    style = { \"text-align\": \"center\" };\n    return (\n      <div className={props.today ? \"date-today\" : \"date\"} style={style}>\n        <h3 className=\"clndr-day\">{format(props.fullDate, \"eee\")}</h3>\n        <h4 className=\"clndr-date\">{format(props.fullDate, \"dd\")}</h4>\n      </div>\n    );\n  }\n}\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lectures: [],\n      labs: [],\n      assignments: [],\n      all: [],\n      exams: [],\n      expand: \"no-expand\", //classname to add to day component to indicate css transition\n      prevExpand: \"no-expand\", //set previous state of expansion to prevent repeated events into expanded view\n      syllabusView: false,\n      rightSide: {},\n      colWidth: 0,\n    };\n    this.test = false;\n    this.courserefs = []; //array of refs to data in a lecture card\n  }\n\n  componentDidUpdate() {\n    if (this.state.expand === \"is-expanded\") {\n      let width = this.getEWidth();\n      width !== this.state.colWidth &&\n        this.setState({\n          colWidth: width,\n        });\n    }\n  }\n\n  componentDidMount() {\n    const lectures = this.props.user.courses.filter((course) => {\n      if (course.days.includes(this.props.day)) {\n        return course;\n      }\n    });\n\n    const labs = this.props.user.labs.filter((lab) => {\n      if (lab.days.includes(this.props.day)) {\n        return lab;\n      }\n    });\n\n    const all = [];\n    this.props.user.courses.forEach((course) => {\n      course.assignments.forEach((assignment) => {\n        all.push(assignment);\n      });\n    });\n\n    const assignments = [];\n    this.props.user.courses.forEach((course) => {\n      course.assignments.forEach((assignment) => {\n        const dueDate = parseISO(assignment.dueDate, \"yyyy-MM-dd\", new Date());\n        if (isSameDay(dueDate, this.props.fullDate)) {\n          assignments.push(assignment);\n        }\n      });\n    });\n\n    const exams = [];\n    this.props.user.courses.forEach((course) => {\n      course.exams.map((exam) => {\n        console.log(exam);\n        const dueDate = parseISO(exam.dueDate, \"yyyy-MM-dd\", new Date());\n        if (isSameDay(dueDate, this.props.fullDate)) {\n          exams.push(exam);\n        }\n      });\n    });\n\n    this.setState({\n      lectures: lectures,\n      labs: labs,\n      assignments: assignments,\n      exams: exams,\n      colWidth: this.getEWidth(),\n    });\n  }\n\n  parseTime = (time) => {\n    let hours = getHours(time);\n    let minutes = getMinutes(time);\n\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes === 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  };\n\n  setLectureRef = (el) => {\n    this.expandRef = el;\n    this.daysrefs.push(this.showMoreRef);\n    console.log(el);\n  };\n\n  //On-Click function that shows right hand side expanded view for class on\n  //course card clikck\n  showMore(index, e) {\n    if (this.state.expand === \"is-expanded\") {\n      // console.log(index)\n      // let lecture = this.courserefs[index]\n      // console.log(this.state.lectures[index])\n      // this.populateRightSide(lecture)\n      // // console.log(\"^ from show more\")\n\n      e.stopPropagation();\n      this.setState((prevState) => {\n        return {\n          expand: \"is-expanded\",\n          prevExpand: prevState.expand,\n        };\n      });\n      this.setState({ syllabusView: !this.state.syllabusView });\n      // console.log(showExtra)\n    }\n  }\n\n  getEWidth() {\n    let elem;\n    if (this.props.days > 1) {\n      elem = document.querySelector(\".no-expand\");\n    }\n    let width = this.props.days > 1 ? elem.clientWidth : 0;\n\n    // let e = document.getElementById(\"clndr-col-\" + i);\n    // console.log(elem);\n    // console.log(this.state.colWidth)\n\n    return width;\n  }\n\n  render() {\n    // console.log(\"expad: \" + this.state.expand)\n    // console.log(\"prev expand: \" + this.state.prevExpand)\n    // console.log(\"colWid: \" + this.state.colWidth)\n\n    var { lectures, labs, assignments, exams } = this.state;\n\n    var section_css =\n      this.state.expand === \"is-expanded\"\n        ? {\n            transform: `translateX(calc(-${\n              this.state.colWidth * this.props.i\n            }px - calc(1rem *  ${this.props.i})))`,\n          }\n        : { transform: `translateX(0px)` };\n\n    var right_side_css = {\n      display:\n        this.state.expand === \"is-expanded\" && this.state.syllabusView\n          ? \"block\"\n          : \"none\",\n    };\n    // console.log(exams);\n    // console.log(exams.sort((e1, e2) => e1.dueTime > e2.dueTime));\n\n    console.log(this.state.all);\n    return (\n      <section\n        id={\"clndr-col-\" + this.props.i}\n        className={\n          \"day-col \" +\n          this.state.expand +\n          (this.props.today ? \" clndr-today\" : \"\")\n        }\n        style={section_css}\n      >\n        {this.state.expand === \"is-expanded\" ? (\n          <div className=\"breadcrumbs\">\n            <Breadcrumbs aria-label=\"breadcrumb\" className=\"bc\">\n              <LinkUI\n                color=\"inherit\"\n                onClick={() => {\n                  this.setState({ expand: \"no-expand\" });\n                }}\n              >\n                Weekly Overview\n              </LinkUI>\n              <LinkUI color=\"textPrimary\">\n                {format(this.props.fullDate, \"E',' LLL do\")}\n              </LinkUI>\n            </Breadcrumbs>\n          </div>\n        ) : (\n          false\n        )}\n\n        <DayHeader\n          expand={this.state.expand}\n          today={this.props.today}\n          day={this.props.day}\n          date={this.props.date}\n          fullDate={this.props.fullDate}\n        />\n\n        {/* Exams badge */}\n        <Badge\n          type=\"exams\"\n          exams={this.state.exams}\n          user={this.props.user}\n        ></Badge>\n        {/* Assignments badge */}\n        <Badge\n          type=\"assignments\"\n          assignments={this.state.assignments}\n          user={this.props.user}\n        ></Badge>\n\n        <div className={this.state.expand === \"is-expanded\" ? \"flex\" : \"\"}>\n          <div className=\"courses\">\n            {/*\n            {exams\n              .sort((e1, e2) => e1.dueTime > e2.dueTime)\n              .map((exam) => {\n                return (\n                  <ExamCard\n                    {...exam}\n                    parseTime={(time) => this.parseTime(time)}\n                    expand={this.state.expand}\n                    showFull={this.props.days <= 4}\n                  />\n                );\n              })}*/}\n\n            {lectures\n              .concat(labs)\n              .sort((l1, l2) => l1.startTime > l2.startTime)\n              .map((course, i) => {\n                return (\n                  <LectureCard\n                    {...course}\n                    parseTime={(time) => this.parseTime(time)}\n                    expand={this.state.expand} //bool to toggle expanded view\n                    showFull={this.props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n                    handleclick={this.showMore.bind(this, i)} //show right hand side when clicked inside expanded view\n                    syllabusView={this.state.syllabusView} //bool to toggle right-hand side details\n                    ref={(ref) => (this.courserefs[i] = ref)}\n                  />\n                );\n              })}\n          </div>\n\n          <div className=\"right-side\" style={right_side_css}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                className=\"syllabus-column\"\n                style={{\n                  margin: \"40px\",\n                  marginTop: \"0px\",\n                  overflow: \"auto\",\n                  textAlign: \"center\",\n                }}\n              >\n                <h4>Due This Week</h4>\n                {this.state.assignments.length == 0 ? (\n                  <p>No assignments due this week.</p>\n                ) : (\n                  this.state.assignments.map((assignment) => {\n                    const dueDate = parseISO(\n                      assignment.dueDate,\n                      \"yyyy-MM-dd\",\n                      new Date()\n                    );\n                    if (isSameWeek(dueDate, this.props.fullDate)) {\n                      return (\n                        <AssignmentCard\n                          {...assignment}\n                          parseTime={(time) => this.parseTime(time)}\n                          expand={this.state.expand} //bool to toggle expanded view\n                          showFull={this.props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n                          handleclick={this.showMore.bind(this)} //show right hand side when clicked inside expanded view\n                          syllabusView={this.state.syllabusView} //bool to toggle right-hand side details\n                        />\n                      );\n                    }\n                  })\n                )}\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  textAlign: \"center\",\n                }}\n              >\n                <h4>Upcoming Assignments</h4>\n                {this.state.length == 0 ? (\n                  <p>No assigments due this week.</p>\n                ) : (\n                  this.state.all.map((assignment) => {\n                    const dueDate = parseISO(\n                      assignment.dueDate,\n                      \"yyyy-MM-dd\",\n                      new Date()\n                    );\n                    if (!isSameWeek(dueDate, this.props.fullDate)) {\n                      return (\n                        <AssignmentCard\n                          {...assignment}\n                          parseTime={(time) => this.parseTime(time)}\n                          expand={this.state.expand} //bool to toggle expanded view\n                          showFull={this.props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n                          handleclick={this.showMore.bind(this)} //show right hand side when clicked inside expanded view\n                          syllabusView={this.state.syllabusView} //bool to toggle right-hand side details\n                        />\n                      );\n                    }\n                  })\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* <SyllabusView\n            style={right_side_css}\n            className=\"right_side\"\n            viewType=\"assignments\"\n            user={this.props.user}\n            expand={this.state.expand} //bool to toggle expanded view\n            showFull={this.props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n            handleclick={this.showMore.bind(this)} //show right hand side when clicked inside expanded view\n          /> */}\n          {/* <div\n            className = \"right-side\"\n            style={right_side_css}\n          > \n            \n            <div>\n              <h1>HI this right hand side</h1>\n            </div>\n          \n          </div> */}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Day;\n","import React from \"react\";\nimport { Slider, Grid, Row, Column, Loading } from \"carbon-components-react\";\nimport { addDays, format, formatISO } from \"date-fns\";\nimport Day from \"../../components/Day\";\nimport \"./calendar.scss\";\nimport api from \"../../apiHandle\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date(),\n      days: 3, //number of days shown in schedule page\n      dataLoaded: false,\n      user: props.user,\n      expand: \"no-expand\",\n    };\n    this.date = format(this.state.today, \"d\");\n    this.daysrefs = [];\n    // this.expandRef = React.createRef();\n  }\n\n  // setDayRef = (el) => {\n  //   this.expandRef = el;\n  //   this.daysrefs.push(this.expandRef);\n  //   console.log(el);\n  // };\n\n  // Handles day slider change to close any currently expanded days before re-rendering days\n  daySliderHandler = (value) => {\n    if (this.state.expand === \"expanded\") {\n      this.daysrefs.forEach((day) => {\n        if (day.state.expand === \"is-expanded\") {\n          day.setState((prevState) => {\n            return {\n              expand: \"no-expand\",\n              prevExpand: prevState.expand,\n            };\n          });\n        }\n      });\n    }\n    this.setState({ days: value });\n  };\n\n  shouldComponentUpdate() {\n    return this.state.days > 0;\n  }\n\n  hello() {\n    console.log(\"I was triggered during render\");\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.setState({\n      user: this.props.user,\n      dataLoaded: true,\n    });\n  }\n\n  //   componentWillUnmount() {\n  //       var state = this.state;\n  //   }\n\n  // toggles the state of the clicked day component and calendar component to expand/no-expand\n  expandDay(index, day) {\n    // console.log(index);\n    // console.log(day);\n\n    const wrapper = this.daysrefs[index].state;\n    // console.log(wrapper);\n    // var setexpand;\n\n    if (this.state.expand === \"no-expand\") {\n      this.daysrefs[index].setState((prevState) => {\n        return {\n          expand: \"is-expanded\",\n          prevExpand: prevState.expand,\n        };\n      });\n      this.setState({ expand: \"is-expanded\" });\n    } else {\n      if (wrapper.expand === \"is-expanded\") {\n        // console.log(\"minize!\");\n        this.daysrefs[index].setState((prevState) => {\n          return {\n            expand: \"no-expand\",\n            prevExpand: prevState.expand,\n          };\n        });\n        this.setState({ expand: \"no-expand\" });\n      }\n\n      // setexpand = (wrapper.expand === \"no-expand\") ? 'is-expanded' : 'no-expand'\n    }\n    // console.log(wrapper.expand);\n  }\n\n  //goes through Day components and finds out which index day is expanded\n  findExpandedDay() {\n    let dayidx;\n    for (const [index, val] of this.daysrefs.entries()) {\n      let dayrefState = val.state;\n      if (dayrefState.expand === \"is-expanded\") {\n        console.log(index);\n        dayidx = index;\n        break;\n      }\n    }\n    return dayidx;\n  }\n\n  changeDayVal(value) {\n    if (this.state.expand === \"is-expanded\") {\n      let day = this.findExpandedDay();\n      console.log(day);\n      this.expandDay(day, null);\n\n      this.state.expand === \"is-expanded\" && this.setState({ days: value });\n    }\n    console.log(this.state.expand);\n\n    this.state.expand === \"no-expand\" && this.setState({ days: value });\n  }\n\n  render() {\n    const day_list = [];\n    if (this.state.dataLoaded) {\n      for (let i = 0; i < this.state.days; i++) {\n        let day =\n          i === 0 ? (\n            <Day\n              key={i}\n              i={i}\n              // className=\"today\"\n              today={true}\n              fullDate={this.state.today}\n              month={format(this.state.today, \"LLL\")}\n              date={this.state.today.getDate()}\n              day={format(this.state.today, \"EEE\")}\n              days={this.state.days}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              // expandWidth={document.getElementById('calendar').clientWidth}\n              user={this.state.user}\n            />\n          ) : (\n            <Day\n              key={i}\n              i={i}\n              // className={this.state.expand}\n              today={false}\n              fullDate={addDays(this.state.today, i)}\n              month={format(addDays(this.state.today, i), \"LLL\")}\n              date={addDays(this.state.today, i).getDate()}\n              day={format(addDays(this.state.today, i), \"EEE\")}\n              days={this.state.days}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              // expandWidth={document.getElementById('calendar').clientWidth}\n              user={this.state.user}\n            />\n          );\n        day_list.push(day);\n      }\n    }\n\n    return (\n      <Grid id=\"calendar\" className=\"bx--grid calendar-contain\" narrow={true}>\n        <Row className=\"intro\">\n          {/*TODO: do a terneary operation is addDay.month == this.date.month ? show new month after emdash : don't show month */}\n          <Column>\n            <h3>\n              Hello,{\" \"}\n              <span className=\"user-first-name\">\n                {this.state.user.firstName}\n              </span>\n            </h3>\n\n            <h4 aria-label=\"calendar\" className=\"calendar-title\">\n              {format(this.state.today, \"cccc\") + \", \"}\n              {format(this.state.today, \"LLLL\")} {this.date}\n            </h4>\n          </Column>\n\n          <Column className=\"slider\">\n            <h4> {this.state.days} days </h4>\n            <div className=\"slider-row\">\n              <div>\n                <div>\n                  <Slider\n                    ariaLabelInput=\"day slider\"\n                    className=\"day-slider \"\n                    max={5}\n                    min={1}\n                    value={3}\n                    onChange={({ value }) => this.changeDayVal(value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </Column>\n        </Row>\n\n        {this.state.dataLoaded ? (\n          <Row className=\"date-head\">\n            {day_list.map((day, index) => {\n              let handleclick = this.expandDay.bind(this, index);\n\n              return (\n                <Column\n                  key={day.props.date}\n                  // className={'a-day bx--col-lg-' + Math.floor(16 / this.state.days)}\n                  className=\"a-day\"\n                  lg={Math.floor(16 / this.state.days)}\n                  onClick={handleclick}\n                >\n                  {day}\n                </Column>\n              );\n            })}\n          </Row>\n        ) : (\n          false\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Calendar;\n","export default __webpack_public_path__ + \"static/media/logo.3607ce5b.png\";","import React from \"react\";\nimport { SideNav, Row, Column, Grid } from \"carbon-components-react\";\nimport { Link } from \"react-router-dom\";\nimport \"../pages/schedule/calendar.scss\";\nimport logo from \"../assets/logo.png\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nfunction HeaderNav(props) {\n  return (\n    <div className=\"App\">\n      <SideNav\n        className=\"nav\"\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\"\n      >\n        <Grid>\n          <Column>\n            {/* <div style={{display: \"flex\", flexDirection: \"row\"}}>\n              <img\n                  className=\"logo\"\n                  src={logo}\n                  width=\"80px\"\n                  height=\"80px\"\n                ></img>\n                <Link className=\"nav-link-home\" to=\"/\">\n                  <h3>Cadre</h3>\n                  <br></br>\n                </Link>\n            </div> */}\n            <Row className=\"title\">\n              <Column>\n                <img\n                  className=\"logo\"\n                  src={logo}\n                  width=\"80px\"\n                  height=\"80px\"\n                ></img>\n              </Column>\n\n              <Column>\n                <Link className=\"nav-link-home\" to=\"/\">\n                  <h3>Cadre</h3>\n                  <br></br>\n                </Link>\n              </Column>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/schedule/student\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Schedule</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/assignments\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Assignments</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/exams\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Exams</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/createCourse\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Create Course</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/createAssignment\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Create Assignment</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link className=\"nav-link\" to=\"/signup\">\n                <h4>Signup</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link className=\"nav-link\" to=\"/login\">\n                <h4>Login</h4>\n              </Link>\n            </Row>\n\n            <Row></Row>\n          </Column>\n        </Grid>\n      </SideNav>\n    </div>\n  );\n}\n\nexport default HeaderNav;\n","import React from \"react\";\n// import {HomePage} from './home/HomePage'\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Calendar from \"./Calendar\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport { Content } from \"carbon-components-react\";\n\nfunction SchedulePage(props) {\n  const location = useLocation();\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <Content>\n        <Calendar user={location.state.user} />\n      </Content>\n    </div>\n  );\n}\n\nexport default SchedulePage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function LoginForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.getStudentByEmail(email).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push({\n            pathname: \"/schedule/student\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find student with this email.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.getProfessorByEmail(email).then((res) => {\n        if (res != null) {\n          history.push({\n            pathname: \"/schedule/professor\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find professor with this email.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Grid className=\"login-form\">\n      <Form onSubmit={submitHandler}>\n        <Row>\n          <Column>\n            <h2>Welcome to Cadre</h2>\n            <br></br>\n            <p>To view an example schedule, enter</p>\n            <p>email jmin@bu.edu and select Student.</p>\n          </Column>\n        </Row>\n        <br></br>\n        <br></br>\n        <br></br>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"email-input\" legendText=\"Email\">\n              <TextInput\n                id=\"email\"\n                value={email}\n                placeholdertext=\"Email\"\n                helperText=\"Please enter your email to view your schedule.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleEmailChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n              <Select\n                value={user}\n                onChange={(e) => {\n                  handleUserSelect(e.target.value);\n                }}\n                hideLabel={true}\n                id=\"lectureStyle\"\n              >\n                {userTypeOptions.map((option) => (\n                  <SelectItem text={option.text} value={option.value} />\n                ))}\n              </Select>\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\n\nfunction LoginPage(props) {\n  return <LoginForm />;\n}\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function SignupForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [firstName, handleFirstNameChange] = useState(\"\");\n  const [lastName, handleLastNameChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.createStudent(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push(\"/schedule/student/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create student.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.createProfessor(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          history.push(\"/schedule/professor/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create professor.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Grid className=\"signup-form\">\n      <Form onSubmit={submitHandler}>\n        <Row>\n          <h2>Create an account</h2>\n        </Row>\n        <br></br>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"email-input\" legendText=\"Email\">\n              <TextInput\n                id=\"email\"\n                value={email}\n                placeholdertext=\"Email\"\n                helperText=\"Please enter your email to view your schedule.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleEmailChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"firstname-input\" legendText=\"First Name\">\n              <TextInput\n                id=\"firstName\"\n                value={firstName}\n                placeholdertext=\"First Name\"\n                helperText=\"Please enter your first name.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleFirstNameChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n\n          <Column>\n            <FormGroup className=\"lastName-input\" legendText=\"Last Name\">\n              <TextInput\n                id=\"lastName\"\n                value={lastName}\n                placeholdertext=\"Last Name\"\n                helperText=\"Please enter your last name.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleLastNameChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n              <Select\n                value={user}\n                onChange={(e) => {\n                  handleUserSelect(e.target.value);\n                }}\n                hideLabel={true}\n                id=\"lectureStyle\"\n              >\n                {userTypeOptions.map((option) => (\n                  <SelectItem text={option.text} value={option.value} />\n                ))}\n              </Select>\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport SignupForm from \"./SignupForm\";\n\nfunction SignupPage(props) {\n  return <SignupForm />;\n}\nexport default SignupPage;\n","import React from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  Checkbox,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default class CreateCourseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courseId: \"\",\n      courseName: \"\",\n      section: \"\",\n      school: \"\",\n      zoomLink: \"\",\n      days: {\n        Monday: false,\n        Tuesday: false,\n        Wednesday: false,\n        Thursday: false,\n        Friday: false,\n      },\n      startDate: \"2021-01-25\",\n      endDate: \"2021-04-29\",\n      startTime: \"\",\n      startTimeSelect: \"\",\n      endTime: \"\",\n      endTimeSelect: \"\",\n      lectureStyle: \"Hybrid\",\n    };\n\n    this.onLectureStyleChange = (event) => {\n      this.setState({ lectureStyle: event.target.value });\n    };\n\n    this.onSchoolChange = (event) => {\n      this.setState({ school: event.target.value });\n    };\n\n    this.handleTextInputChange = (event) => {\n      const id = event.target.id;\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.handleTimeInput = (event) => {\n      console.log(event);\n      const id = event.target.id;\n\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.onStartTimeSelect = (event) => {\n      this.setState({ startTimeSelect: event.target.value });\n    };\n\n    this.onEndTimeSelect = (event) => {\n      this.setState({ endTimeSelect: event.target.value });\n    };\n\n    this.handleDaySelect = (checked, id, event) => {\n      if (checked != this.state.days[id]) {\n        const currentDayState = this.state.days;\n        currentDayState[id] = checked;\n        this.setState({ days: currentDayState });\n      }\n    };\n\n    this.schoolOptions = [\n      { text: \"Choose a school\", label: \"placeholder-item\" },\n      {\n        text: \"College of Arts and Sciences\",\n        value: \"College of Arts and Sciences\",\n      },\n      {\n        text: \"College of Fine Arts\",\n        value: \"College of Fine Arts\",\n      },\n      {\n        text: \"Questrom School of Business\",\n        value: \"Questrom School of Business\",\n      },\n      {\n        text: \"College of Engineering\",\n        value: \"College of Engineering\",\n      },\n      {\n        text: \"College of Communication\",\n        value: \"College of Communication\",\n      },\n      {\n        text: \"College of General Studies\",\n        value: \"College of General Studies\",\n      },\n      {\n        text: \"School of Hospitality Administration\",\n        value: \"School of Hospitality Administration\",\n      },\n    ];\n\n    this.lectureStyleOptions = [\n      { text: \"Choose a lecture style\", value: \"placeholder-item\" },\n      { text: \"Hybrid\", value: \"Hybrid\" },\n      { text: \"InPerson\", value: \"InPerson\" },\n      { text: \"Remote\", value: \"Remote\" },\n    ];\n\n    this.submitHandler = (e) => {\n      var {\n        courseId,\n        courseName,\n        section,\n        school,\n        zoomLink,\n        days,\n        startDate,\n        endDate,\n        startTime,\n        startTimeSelect,\n        endTime,\n        endTimeSelect,\n        lectureStyle,\n      } = this.state;\n\n      let parsedDays = [];\n      for (const day in this.state.days) {\n        if (days[day]) {\n          parsedDays.push(day.slice(0, 3));\n        }\n      }\n\n      if (startTimeSelect == \"PM\") {\n        const [sh, sm] = startTime.split(\":\");\n        if (sh != 12) {\n          startTime = 12 + +sh + \":\" + sm;\n        }\n      }\n\n      if (endTimeSelect == \"PM\") {\n        const [eh, em] = endTime.split(\":\");\n        if (eh != 12) {\n          endTime = 12 + +eh + \":\" + em;\n        }\n      }\n\n      // console.log(courseId);\n      // console.log(courseName);\n      // console.log(section);\n      api\n        .createCourseStudent(\n          courseId,\n          courseName,\n          section,\n          school,\n          zoomLink,\n          parsedDays,\n          startDate,\n          endDate,\n          startTime,\n          endTime,\n          lectureStyle,\n          this.props.studentId\n        )\n        .then((res) => {\n          if (res == null) {\n            alert(\n              \"Unable to create course. Please screenshot form and send to dev team.\"\n            );\n            console.log(\"Unable to create course.\");\n          } else {\n            alert(\"Course succesfully created.\");\n            console.log(\"Course created.\");\n            console.log(res);\n          }\n        });\n\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const {\n      courseId,\n      courseName,\n      section,\n      zoomLink,\n      startTimeSelect,\n      endTimeSelect,\n    } = this.state;\n    console.log(this.state);\n    console.log(this.props);\n\n    return (\n      <div>\n        <Grid className=\"course-form\">\n          <Form onSubmit={this.submitHandler}>\n            <Row>\n              <h2>Create Course</h2>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"course-id-input\" legendText=\"Course ID\">\n                  <TextInput\n                    id=\"courseId\"\n                    value={courseId}\n                    helperText=\"Please provide the course ID (i.e. CS111)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  className=\"course-name-input\"\n                  legendText=\"Course Name\"\n                >\n                  <TextInput\n                    id=\"courseName\"\n                    value={courseName}\n                    helperText=\"Please provide the course name (i.e. Intro to Computer Science)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"section-input\" legendText=\"Section\">\n                  <TextInput\n                    id=\"section\"\n                    value={section}\n                    helperText=\"Please provide the course section (i.e. A1)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"school-select\" legendText=\"Select School\">\n                  <Select\n                    value={this.state.school}\n                    onChange={this.onSchoolChange}\n                    id=\"school\"\n                    hideLabel={true}\n                  >\n                    {this.schoolOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup label=\"zoom-link-input\" legendText=\"Zoom Link\">\n                  <TextInput\n                    id=\"zoomLink\"\n                    value={zoomLink}\n                    helperText=\"Please provide the zoom link\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup\n                  label=\"start-time-input\"\n                  legendText=\"Lecture Start Time\"\n                >\n                  <TimePicker\n                    id=\"startTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      value={startTimeSelect}\n                      labelText={\"Time of day\"}\n                      onChange={this.onStartTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"end-time-input\" legendText=\"Lecture End Time\">\n                  <TimePicker\n                    id=\"endTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                    maxLength={5}\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      labelText={\"Time of day\"}\n                      value={endTimeSelect}\n                      onChange={this.onEndTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  label=\"lecture-style-select\"\n                  legendText=\"Lecture Style\"\n                >\n                  <Select\n                    value={this.state.lectureStyle}\n                    onChange={this.onLectureStyleChange}\n                    hideLabel={true}\n                    id=\"lectureStyle\"\n                  >\n                    {this.lectureStyleOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <FormGroup label=\"days-select\" legendText=\"Lecture Days\">\n              <Row>\n                <Column>\n                  <Checkbox\n                    id=\"Monday\"\n                    checked={this.state.days.Monday}\n                    className=\"checkbox-1\"\n                    labelText=\"Monday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Tuesday\"\n                    checked={this.state.days.Tuesday}\n                    className=\"checkbox-2\"\n                    labelText=\"Tuesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Wednesday\"\n                    checked={this.state.days.Wednesday}\n                    className=\"checkbox-3\"\n                    labelText=\"Wednesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Thursday\"\n                    checked={this.state.days.Thursday}\n                    className=\"checkbox-4\"\n                    labelText=\"Thursday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Friday\"\n                    checked={this.state.days.Friday}\n                    className=\"checkbox-5\"\n                    labelText=\"Friday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n              </Row>\n            </FormGroup>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import CreateCourseForm from \"./CreateCourseForm\";\nimport { useParams } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateCoursePage(props) {\n  return <CreateCourseForm studentId={props.location.state.user.id} />;\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  DatePicker,\n  DatePickerInput,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentForm(props) {\n  let [name, handleNameInput] = useState(\"\");\n  let [assignmentType, handleTypeInput] = useState(\"\");\n  let [dueDate, handleDueDateInput] = useState(\"\");\n  let [dueTime, handleDueTimeInput] = useState(\"\");\n  let [dueTimeSelect, handleDueTimeSelect] = useState(\"\");\n  let [courseSelect, handleCourseSelect] = useState(\"\");\n\n  const submitHandler = (event) => {\n    console.log(name);\n    console.log(assignmentType);\n    console.log(dueDate);\n    console.log(dueTime);\n    console.log(dueTimeSelect);\n  };\n\n  console.log(props);\n\n  return (\n    <div>\n      <Grid className=\"course-form\">\n        <Form onSubmit={(e) => submitHandler(e)}>\n          <Row>\n            <h2>Create Assignment</h2>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup className=\"name-input\" legendText=\"Name\">\n                <TextInput\n                  id=\"name\"\n                  value={name}\n                  labelText={false}\n                  helperText=\"Please provide the assignment name.\"\n                  onChange={(e) => {\n                    handleNameInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup\n                className=\"assignment-type-input\"\n                legendText=\"Assignment Type\"\n              >\n                <TextInput\n                  id=\"assignmentType\"\n                  value={assignmentType}\n                  labelText={false}\n                  helperText=\"Please provide the assignment type. i.e. Programming Assignment\"\n                  onChange={(e) => {\n                    handleTypeInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup label=\"due-date-picker\" legendText=\"Due Date\">\n                <DatePicker datePickerType=\"simple\" dateFormat=\"yyyy-M-d\">\n                  <DatePickerInput\n                    placeholder=\"yyyy-m-d\"\n                    id=\"due-date-input\"\n                    value={dueDate}\n                    onChange={(e) => handleDueDateInput(e.target.value)}\n                  ></DatePickerInput>\n                </DatePicker>\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup label=\"due-time-input\" legendText=\"Time Due\">\n                <TimePicker\n                  id=\"dueTime\"\n                  value={dueTime}\n                  onChange={(e) => handleDueTimeInput(e.target.value)}\n                  placeholder=\"hh:mm\"\n                  maxLength={5}\n                >\n                  <TimePickerSelect\n                    id=\"time-picker-select\"\n                    labelText={\"Time of day\"}\n                    value={dueTimeSelect}\n                    onChange={(e) => {\n                      handleDueTimeSelect(e.target.value);\n                    }}\n                  >\n                    <SelectItem value=\"AM\" text=\"AM\" />\n                    <SelectItem value=\"PM\" text=\"PM\" />\n                  </TimePickerSelect>\n                </TimePicker>\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Grid>\n    </div>\n  );\n}\n","import CreateAssignmentForm from \"./CreateAssignmentForm\";\nimport { useLocation } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentPage() {\n  const location = useLocation();\n\n  return <CreateAssignmentForm user={location.state.user} />;\n}\n","import React from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Content } from \"carbon-components-react\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport AssignmentCard from \"../../components/AssignmentCard\";\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport \"./assignments.scss\";\n\nfunction ClassColumn(props) {\n  return (\n    <div className=\"class-column\">\n      <h3>{props.courseId}</h3>\n      <h5>{props.courseName}</h5>\n      {props.assignments.length !== 0 ? (\n        props.assignments\n          .sort((a1, a2) => a1.dueTime > a2.dueTime)\n          .map((assignment) => {\n            return <AssignmentCard {...assignment} expand=\"is-expanded\" />;\n          })\n      ) : (\n        <p>No upcoming assignments</p>\n      )}\n    </div>\n  );\n}\n\nexport default function AssignmentsView(props) {\n  const location = useLocation();\n  console.log(props);\n  const courses = props.user.courses;\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <div className=\"view-container\">\n        <h3>Assignments</h3>\n        <div class=\"class-container\">\n          {courses.map((c) => {\n            return <ClassColumn {...c}></ClassColumn>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import AssignmentsView from \"./AssignmentsView\";\nimport { useLocation } from \"react-router\";\n\nexport default function CreateAssignmentPage() {\n  const location = useLocation();\n\n  return <AssignmentsView user={location.state.user} />;\n}\n","import React from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport ExamCard from \"../../components/ExamCard\";\nimport { Breadcrumbs, Link } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport \"./exams.scss\";\n\nfunction ClassColumn(props) {\n  return (\n    <div className=\"class-column\">\n      <h3>{props.courseId}</h3>\n      <h5>{props.courseName}</h5>\n      {props.exams.length !== 0 ? (\n        props.exams\n          .sort((e1, e2) => e1.dueTime > e2.dueTime)\n          .map((exam) => {\n            return <ExamCard {...exam} expand=\"is-expanded\" />;\n          })\n      ) : (\n        <p>No upcoming exams</p>\n      )}\n    </div>\n  );\n}\n\nexport default function ExamsView(props) {\n  const location = useLocation();\n  console.log(props);\n  const courses = props.user.courses;\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <div class=\"view-container\">\n        <h3>Exams</h3>\n        <div class=\"class-container\">\n          {courses.map((c) => {\n            return <ClassColumn {...c}></ClassColumn>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import ExamsView from \"./ExamsView\";\nimport { useLocation } from \"react-router\";\n\nexport default function ExamsPage() {\n  const location = useLocation();\n\n  return <ExamsView user={location.state.user} />;\n}\n","import \"./App.scss\";\n// import React, { useState, useEffect } from 'react';\n// import { Content } from \"carbon-components-react\";\nimport SchedulePage from \"./pages/schedule/SchedulePage\";\nimport LoginPage from \"./pages/login/LoginPage\";\nimport SignupPage from \"./pages/signup/SignupPage\";\nimport CreateCoursePage from \"./pages/createCourse/CreateCoursePage\";\nimport CreateAssignmentPage from \"./pages/createAssignment/CreateAssignmentPage\";\nimport AssignmentsPage from \"./pages/assignments/AssignmentsPage\";\nimport ExamsPage from \"./pages/exams/ExamsPage\";\n\nimport HomePage from \"./pages/home/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignupPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/createCourse\" component={CreateCoursePage} />\n          <Route path=\"/createAssignment\" component={CreateAssignmentPage} />\n          <Route path=\"/schedule\" component={SchedulePage} />\n          <Route path=\"/assignments\" component={AssignmentsPage} />\n          <Route path=\"/exams\" component={ExamsPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n// import 'node_modules/core-js/modules/es7.array.includes';\n// import 'node_modules/core-js/modules/es6.array.fill';\n// import 'node_modules/core-js/modules/es6.string.includes';\n// import 'node_modules/core-js/modules/es6.string.trim';\n// import 'node_modules/core-js/modules/es7.object.values';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}