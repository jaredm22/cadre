{"version":3,"sources":["apiHandle.js","components/LectureCard.js","components/AssignmentCard.js","components/ExamCard.js","components/Day.js","features/calendar/Calendar.js","components/logo.png","components/HeaderNav.js","pages/schedule/SchedulePage.js","pages/login/LoginForm.js","pages/login/LoginPage.js","pages/signup/SignupForm.js","pages/signup/SignupPage.js","pages/createCourse/CreateCourseForm.js","pages/createCourse/CreateCoursePage.js","pages/createAssignment/CreateAssignmentForm.js","pages/createAssignment/CreateAssignmentPage.js","App.js","reportWebVitals.js","index.js"],"names":["getStudents","a","axios","get","response","data","getStudentByEmail","email","method","url","createStudent","firstName","lastName","deleteStudent","getProfessors","getProfessorByEmail","createProfessor","deleteProfessor","getCourses","createCourse","courseId","courseName","section","school","zoomLink","days","startDate","endDate","startTime","endTime","lectureStyle","createCourseStudent","studentId","getLectures","getModifiedLecture","date","lectureDate","getLabs","createAssignment","name","assignmentType","assignedDate","assignedTime","dueDate","dueTime","tags","parseTime","split","sh","sm","eh","em","LectureCard","props","console","log","className","showFull","course","target","rel","href","style","display","expand","piazzaLink","id","AssignmentCard","parseISO","Date","time","hours","minutes","Course","map","tag","join","ExamCard","Day","getHours","getMinutes","state","lectures","labs","assignments","exams","test","this","user","courses","filter","includes","day","lab","forEach","assignment","isSameDay","fullDate","push","exam","setState","css","transform","i","e","document","getElementById","clientWidth","getEWidth","sort","e1","e2","today","a1","a2","concat","l1","l2","React","Component","Calendar","setDayRef","el","expandRef","daysrefs","daySliderHandler","value","dataLoaded","format","createRef","index","wrapper","dayidx","entries","findExpandedDay","expandDay","day_list","month","getDate","ref","addDays","Grid","narrow","Row","Column","aria-label","Slider","ariaLabelInput","max","min","onChange","changeDayVal","handleclick","bind","lg","Math","floor","onClick","HeaderNav","SideNav","isFixedNav","expanded","isChildOfHeader","src","logo","width","height","to","pathname","SchedulePage","location","useLocation","Content","LoginForm","useState","handleEmailChange","handleUserSelect","history","useHistory","Form","onSubmit","event","api","then","res","alert","preventDefault","FormGroup","legendText","TextInput","placeholdertext","helperText","labelText","label","Select","hideLabel","text","option","SelectItem","Button","variant","type","LoginPage","SignupForm","handleFirstNameChange","handleLastNameChange","SignupPage","CreateCourseForm","Monday","Tuesday","Wednesday","Thursday","Friday","startTimeSelect","endTimeSelect","onLectureStyleChange","onSchoolChange","handleTextInputChange","handleTimeInput","onStartTimeSelect","onEndTimeSelect","handleDaySelect","checked","currentDayState","schoolOptions","lectureStyleOptions","submitHandler","parsedDays","slice","TimePicker","placeholder","TimePickerSelect","maxLength","Checkbox","CreateCoursePage","CreateAssignmentForm","handleNameInput","handleTypeInput","handleDueDateInput","handleDueTimeInput","dueTimeSelect","handleDueTimeSelect","DatePicker","datePickerType","dateFormat","DatePickerInput","CreateAssignmentPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b6627b45.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// var config = {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//   },\n// };\n\nconst getStudents = async () => {\n  const response = await axios.get(\"/students\");\n  return response.data;\n};\n\nconst getStudentByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getStudent\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createStudent = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/students\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteStudent = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/students\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getProfessors = async () => {\n  const response = await axios.get(\"/professor\");\n  return response.data;\n};\n\nconst getProfessorByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getProfessor\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createProfessor = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/professors\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteProfessor = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/professors\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getCourses = async () => {\n  const response = await axios.get(\"/courses\");\n  return response.data;\n};\n\nconst createCourse = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n    },\n  });\n  return response.data;\n};\n\nconst createCourseStudent = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle,\n  studentId\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/addCourseStudent\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n      studentId: studentId,\n    },\n  });\n  return response.data;\n};\n\nconst getLectures = async () => {\n  const response = await axios.get(\"/lectures\");\n  return response.data;\n};\n\nconst getModifiedLecture = async (courseId, date) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getLecture\",\n    data: { courseId: courseId, lectureDate: date },\n  });\n  return response.data;\n};\n\nconst getLabs = async () => {\n  const response = await axios.get(\"/labs\");\n  return response.data;\n};\n\nconst createAssignment = async (\n  courseId,\n  name,\n  assignmentType,\n  assignedDate,\n  assignedTime,\n  dueDate,\n  dueTime,\n  tags\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId,\n      name,\n      assignmentType,\n      assignedDate,\n      assignedTime,\n      dueDate,\n      dueTime,\n      tags,\n    },\n  });\n  return response.data;\n};\n\nexport default {\n  getStudents,\n  getStudentByEmail,\n  createStudent,\n  createCourseStudent,\n  deleteStudent,\n  getProfessors,\n  getProfessorByEmail,\n  createProfessor,\n  deleteProfessor,\n  getCourses,\n  createCourse,\n  getLectures,\n  getModifiedLecture,\n  getLabs,\n  createAssignment,\n};\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parseISO, getHours, getMinutes, format } from \"date-fns\";\nimport React from \"react\";\nimport \"../features/calendar/calendar.scss\";\n\nconst parseTime = (startTime, endTime) => {\n  const [sh, sm] = startTime.split(\":\");\n  const [eh, em] = endTime.split(\":\");\n\n  if (sh < 12 && eh >= 12) {\n    return sh + \":\" + sm + \" AM - \" + eh + \":\" + em + \" PM\";\n  } else if (sh < 12) {\n    return sh + \":\" + sm + \" - \" + eh + \":\" + em + \" AM\";\n  } else {\n    return (\n      (sh == 12 ? sh : sh - 12) +\n      \":\" +\n      sm +\n      \" - \" +\n      (eh == 12 ? eh : eh - 12) +\n      \":\" +\n      em +\n      \" PM\"\n    );\n  }\n};\n\nexport default function LectureCard(props) {\n  console.log(props);\n\n  return (\n    <div key={props.id} className=\"course\">\n      <div className=\"time\">\n        <h5>{parseTime(props.startTime, props.endTime)} </h5>\n      </div>\n\n      {props.courseName != null ? (\n        <div className=\"fullname-course\">\n          <h4 className=\"black\">\n            {props.courseId} {props.showFull ? \" | Lecture\" : \"\"}\n          </h4>\n        </div>\n      ) : (\n        <div className=\"fullname-course\">\n          <h4 className=\"black\">{props.course.courseId + \" | Lab\"}</h4>\n        </div>\n      )}\n\n      <div\n        className=\"fullname-course\"\n        // style={{ display: props.showFull ? \"block\" : \"none\"}}\n      >\n        <h5 className=\"black\">{props.courseName}</h5>\n      </div>\n\n      <br></br>\n\n      <div className=\"zoomlink\">\n        <h6 className=\"blue\">\n          <a target=\"_blank\" rel=\"noreferrer\" href={props.zoomLink}>\n            Zoom Link\n          </a>\n        </h6>\n        <p style={{ display: props.showFull ? \"block\" : \"none\" }}>\n          <a target=\"_blank\" rel=\"noreferrer\" href={props.zoomLink}>\n            {props.zoomLink}\n          </a>\n        </p>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        <ul>\n          <li>\n            <p\n              className=\"black\"\n              style={{ display: props.showFull ? \"block\" : \"none\" }}\n            >\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"blackboard.com\">\n                Lecture Slides\n              </a>\n            </p>\n          </li>\n\n          <li>\n            {props.piazzaLink != null ? (\n              <p\n                className=\"black\"\n                style={{ display: props.showFull ? \"block\" : \"none\" }}\n              >\n                <a target=\"_blank\" rel=\"noreferrer\" href={props.piazzaLink}>\n                  Piazza\n                </a>\n              </p>\n            ) : (\n              false\n            )}\n          </li>\n\n          <li>Assignments</li>\n          <li>Office hours</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parseISO, getDate, getMonth, format } from \"date-fns\";\nimport React from \"react\";\nimport \"../features/calendar/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\" && minutes === \"00\") {\n    return \"Noon\";\n  } else {\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes == 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  }\n};\n\nexport default function AssignmentCard(props) {\n  const dueDate = parseISO(props.dueDate, \"yyyy-MM-dd\", new Date());\n  const dueTime = parseTime(props.dueTime);\n\n  return (\n    <div key={props.id} className=\"assignment\">\n      <div className=\"time\">\n        <h5>{\"Due: \" + dueTime}</h5>\n      </div>\n\n      <div className=\"homework\">\n        <h4>\n          {props.Course.courseId} {props.showFull ? \" | Assignment\" : \"\"}\n        </h4>\n      </div>\n\n      <div className=\"fullname-assignment\">\n        <h6>{props.name}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        <ul>\n          <li>{props.tags.map((tag) => tag).join(\", \")}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport { parseISO, format } from \"date-fns\";\nimport React from \"react\";\nimport \"../features/calendar/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  return (\n    (hours >= 13 ? hours - 12 : hours) +\n    \":\" +\n    (minutes == 0 ? \"00\" : minutes) +\n    (hours >= 12 ? \" PM\" : \" AM\")\n  );\n};\n\nexport default function ExamCard(props) {\n  const dueDate = parseISO(props.dueDate, \"yyyy-MM-dd\", new Date());\n  const dueTime = parseTime(props.dueTime);\n  console.log(props);\n\n  return (\n    <div key={props.id} className=\"exam\">\n      <div className=\"time\">\n        <h5>{dueTime}</h5>\n      </div>\n\n      <div className=\"course-id\">\n        <h4>{props.Course.courseId + (props.showFull ? \" |  Exam\" : \"\")}</h4>\n      </div>\n\n      <div className=\"fullname-exam\">\n        <h6>{props.name}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        <ul>\n          <li>{props.tags.map((tag) => tag).join(\", \")}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown, Grid, Row } from \"carbon-components-react\";\nimport api from \"../apiHandle\";\nimport {\n  parseISO,\n  getHours,\n  getMinutes,\n  isSameDay,\n  compareAsc,\n} from \"date-fns\";\nimport LectureCard from \"./LectureCard\";\nimport AssignmentCard from \"./AssignmentCard\";\nimport ExamCard from \"./ExamCard\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lectures: [],\n      labs: [],\n      assignments: [],\n      exams: [],\n      expand: \"no-expand\", //classname to add to day component to indicate css transition\n    };\n    this.test = false;\n  }\n\n  componentDidMount() {\n    const lectures = this.props.user.courses.filter((course) => {\n      if (course.days.includes(this.props.day)) {\n        return course;\n      }\n    });\n\n    const labs = this.props.user.labs.filter((lab) => {\n      if (lab.days.includes(this.props.day)) {\n        return lab;\n      }\n    });\n\n    const assignments = [];\n    this.props.user.courses.forEach((course) => {\n      course.assignments.forEach((assignment) => {\n        const dueDate = parseISO(assignment.dueDate, \"yyyy-MM-dd\", new Date());\n        if (isSameDay(dueDate, this.props.fullDate)) {\n          assignments.push(assignment);\n        }\n      });\n    });\n\n    const exams = [];\n    this.props.user.courses.forEach((course) => {\n      course.exams.map((exam) => {\n        const dueDate = parseISO(exam.dueDate, \"yyyy-MM-dd\", new Date());\n        if (isSameDay(dueDate, this.props.fullDate)) {\n          exams.push(exam);\n        }\n      });\n    });\n\n    this.setState({\n      lectures: lectures,\n      labs: labs,\n      assignments: assignments,\n      exams: exams,\n    });\n  }\n\n  parseTime = (time) => {\n    let hours = getHours(time);\n    let minutes = getMinutes(time);\n\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes === 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  };\n\n  render() {\n    var { lectures, labs, assignments, exams } = this.state;\n    let getEWidth = (i) => {\n      let e = document.getElementById(\"clndr-col-\" + i);\n      console.log(e.clientWidth);\n      return e.clientWidth;\n    };\n    var css = {\n      transform:\n        this.state.expand === \"is-expanded\"\n          ? `translateX(-${getEWidth(this.props.i) * this.props.i}px)`\n          : `translateX(0px)`,\n    };\n    console.log(exams);\n    console.log(exams.sort((e1, e2) => e1.dueTime > e2.dueTime));\n\n    return (\n      <section\n        id={\"clndr-col-\" + this.props.i}\n        className={\n          \"day-col \" +\n          this.state.expand +\n          (this.props.today ? \" clndr-today\" : \"\")\n        }\n        style={css}\n      >\n        {this.props.today ? (\n          <div className=\"date-today\">\n            <h3 className=\"clndr-day\">{this.props.day}</h3>\n            <h4 className=\"clndr-date\">{this.props.date}</h4>\n          </div>\n        ) : (\n          <div className=\"date\">\n            <h3 className=\"clndr-day\">{this.props.day}</h3>\n            <h4 className=\"clndr-date\">{this.props.date}</h4>\n          </div>\n        )}\n\n        <div className=\"courses\">\n          {assignments\n            .sort((a1, a2) => a1.dueTime > a2.dueTime)\n            .map((assignment) => {\n              return (\n                <AssignmentCard\n                  {...assignment}\n                  parseTime={(time) => this.parseTime(time)}\n                  expand={this.state.expand}\n                  showFull={this.props.days <= 4}\n                />\n              );\n            })}\n          {exams\n            .sort((e1, e2) => e1.dueTime > e2.dueTime)\n            .map((exam) => {\n              return (\n                <ExamCard\n                  {...exam}\n                  parseTime={(time) => this.parseTime(time)}\n                  expand={this.state.expand}\n                  showFull={this.props.days <= 4}\n                />\n              );\n            })}\n          {lectures\n            .concat(labs)\n            .sort((l1, l2) => l1.startTime > l2.startTime)\n            .map((course) => {\n              return (\n                <LectureCard\n                  {...course}\n                  parseTime={this.parseTime}\n                  expand={this.state.expand}\n                  showFull={this.props.days <= 4}\n                />\n              );\n            })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Day;\n","import React from \"react\";\nimport { Slider, Grid, Row, Column, Loading } from \"carbon-components-react\";\nimport { addDays, format, formatISO } from \"date-fns\";\nimport Day from \"../../components/Day\";\nimport \"./calendar.scss\";\nimport api from \"../../apiHandle\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date(),\n      days: 3,\n      dataLoaded: false,\n      user: props.user,\n      expand: \"no-expand\",\n    };\n    this.date = format(this.state.today, \"d\");\n    this.expandRef = React.createRef();\n    this.daysrefs = [];\n  }\n\n  setDayRef = (el) => {\n    this.expandRef = el;\n    this.daysrefs.push(this.expandRef);\n    console.log(el);\n  };\n\n  // Handles day slider change to close any currently expanded days before re-rendering days\n  daySliderHandler = (value) => {\n    if (this.state.expand === \"expanded\") {\n      this.daysrefs.forEach((day) => {\n        if (day.state.expand === \"is-expanded\") {\n          day.setState({ expand: \"no-expand\" });\n        }\n      });\n    }\n    this.setState({ days: value });\n  };\n\n  shouldComponentUpdate() {\n    return this.state.days > 0;\n  }\n\n  hello() {\n    console.log(\"I was triggered during render\");\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.setState({\n      user: this.props.user,\n      dataLoaded: true,\n    });\n  }\n\n  //   componentWillUnmount() {\n  //       var state = this.state;\n  //   }\n\n  // toggles the state of the clicked day component and calendar component to expand/no-expand\n  expandDay(index, day) {\n    console.log(index);\n    console.log(day);\n    // if (day > 0 && day < 4) {\n    const wrapper = this.daysrefs[index].state;\n    console.log(wrapper);\n    // var setexpand;\n\n    if (this.state.expand === \"no-expand\") {\n      this.daysrefs[index].setState({ expand: \"is-expanded\" });\n      this.setState({ expand: \"is-expanded\" });\n    } else {\n      if (wrapper.expand === \"is-expanded\") {\n        console.log(\"minize!\");\n        this.daysrefs[index].setState({ expand: \"no-expand\" });\n        this.setState({ expand: \"no-expand\" });\n        console.log(this.state.expand);\n      }\n      // setexpand = (wrapper.expand === \"no-expand\") ? 'is-expanded' : 'no-expand'\n    }\n  }\n\n  //goes through Day components and find out which index day is expanded\n  findExpandedDay() {\n    let dayidx;\n    for (const [index, val] of this.daysrefs.entries()) {\n      let dayrefState = val.state;\n      if (dayrefState.expand === \"is-expanded\") {\n        console.log(index);\n        dayidx = index;\n        break;\n      }\n    }\n    return dayidx;\n  }\n\n  changeDayVal(value) {\n    if (this.state.expand === \"is-expanded\") {\n      let day = this.findExpandedDay();\n      console.log(day);\n      this.expandDay(day, null);\n\n      this.state.expand === \"is-expanded\" && this.setState({ days: value });\n    }\n    console.log(this.state.expand);\n\n    this.state.expand === \"no-expand\" && this.setState({ days: value });\n  }\n\n  render() {\n    const day_list = [];\n    if (this.state.dataLoaded) {\n      for (let i = 0; i < this.state.days; i++) {\n        let day =\n          i === 0 ? (\n            <Day\n              key={i}\n              i={i}\n              // className=\"today\"\n              today={true}\n              fullDate={this.state.today}\n              month={format(this.state.today, \"LLL\")}\n              date={this.state.today.getDate()}\n              day={format(this.state.today, \"EEE\")}\n              days={this.state.days}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              // expandWidth={document.getElementById('calendar').clientWidth}\n              user={this.state.user}\n            />\n          ) : (\n            <Day\n              key={i}\n              i={i}\n              // className={this.state.expand}\n              today={false}\n              fullDate={addDays(this.state.today, i)}\n              month={format(addDays(this.state.today, i), \"LLL\")}\n              date={addDays(this.state.today, i).getDate()}\n              day={format(addDays(this.state.today, i), \"EEE\")}\n              days={this.state.days}\n              ref={(ref) => (this.daysrefs[i] = ref)}\n              expand=\"no-expand\"\n              // expandWidth={document.getElementById('calendar').clientWidth}\n              user={this.state.user}\n            />\n          );\n        day_list.push(day);\n      }\n    }\n\n    return (\n      <Grid id=\"calendar\" className=\"bx--grid calendar-contain\" narrow={true}>\n        <Row className=\"intro\">\n          {/*TODO: do a terneary operation is addDay.month == this.date.month ? show new month after emdash : don't show month */}\n          <Column>\n            <h3>\n              Hello,{\" \"}\n              <span className=\"user-first-name\">\n                {this.state.user.firstName}\n              </span>\n            </h3>\n\n            <h4 aria-label=\"calendar\" className=\"calendar-title\">\n              {format(this.state.today, \"cccc\") + \", \"}\n              {format(this.state.today, \"LLLL\")} {this.date}\n            </h4>\n          </Column>\n\n          <Column className=\"slider\">\n            <h4> {this.state.days} days </h4>\n            <div className=\"slider-row\">\n              <div>\n                <div>\n                  <Slider\n                    ariaLabelInput=\"day slider\"\n                    className=\"day-slider \"\n                    max={5}\n                    min={1}\n                    value={3}\n                    onChange={({ value }) => this.changeDayVal(value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </Column>\n        </Row>\n\n        {this.state.dataLoaded ? (\n          <Row className=\"date-head\">\n            {day_list.map((day, index) => {\n              let handleclick = this.expandDay.bind(this, index);\n\n              return (\n                <Column\n                  key={day.props.date}\n                  // className={'a-day bx--col-lg-' + Math.floor(16 / this.state.days)}\n                  className=\"a-day\"\n                  lg={Math.floor(16 / this.state.days)}\n                  onClick={handleclick}\n                >\n                  {day}\n                </Column>\n              );\n            })}\n          </Row>\n        ) : (\n          false\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Calendar;\n","export default __webpack_public_path__ + \"static/media/logo.3607ce5b.png\";","import { SideNav, Row, Column, Grid } from \"carbon-components-react\";\nimport { Link } from \"react-router-dom\";\nimport \"../features/calendar/calendar.scss\";\nimport logo from \"./logo.png\";\n\nfunction HeaderNav(props) {\n  return (\n    <div className=\"App\">\n      <SideNav\n        className=\"nav\"\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\"\n      >\n        <Grid>\n          <Column>\n            <Row className=\"title\">\n              <Column>\n                <img\n                  className=\"logo\"\n                  src={logo}\n                  width=\"80px\"\n                  height=\"80px\"\n                ></img>\n              </Column>\n\n              <Column>\n                <Link className=\"nav-link-home\" to=\"/\">\n                  <h3>Cadre</h3>\n                  <br></br>\n                </Link>\n              </Column>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/createCourse\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Create Course</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: \"/createAssignment\",\n                  state: {\n                    user: props.user,\n                  },\n                }}\n              >\n                <h4>Create Assignment</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link className=\"nav-link\" to=\"/signup\">\n                <h4>Signup</h4>\n              </Link>\n            </Row>\n\n            <Row>\n              <Link className=\"nav-link\" to=\"/login\">\n                <h4>Login</h4>\n              </Link>\n            </Row>\n          </Column>\n        </Grid>\n      </SideNav>\n    </div>\n  );\n}\n\nexport default HeaderNav;\n","import React from \"react\";\n// import {HomePage} from './home/HomePage'\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Calendar from \"../../features/calendar/Calendar\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport { Content } from \"carbon-components-react\";\n\nfunction SchedulePage(props) {\n  const location = useLocation();\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <Content>\n        <Calendar user={location.state.user} />\n      </Content>\n    </div>\n  );\n}\n\nexport default SchedulePage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function LoginForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.getStudentByEmail(email).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push({\n            pathname: \"/schedule/student\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find student with this email.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.getProfessorByEmail(email).then((res) => {\n        if (res != null) {\n          history.push({\n            pathname: \"/schedule/professor\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find professor with this email.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Grid className=\"login-form\">\n      <Form onSubmit={submitHandler}>\n        <Row>\n          <Column>\n            <h2>Welcome to Cadre</h2>\n            <br></br>\n            <p>To view an example schedule, enter</p>\n            <p>email jmin@bu.edu and select Student.</p>\n          </Column>\n        </Row>\n        <br></br>\n        <br></br>\n        <br></br>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"email-input\" legendText=\"Email\">\n              <TextInput\n                id=\"email\"\n                value={email}\n                placeholdertext=\"Email\"\n                helperText=\"Please enter your email to view your schedule.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleEmailChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n              <Select\n                value={user}\n                onChange={(e) => {\n                  handleUserSelect(e.target.value);\n                }}\n                hideLabel={true}\n                id=\"lectureStyle\"\n              >\n                {userTypeOptions.map((option) => (\n                  <SelectItem text={option.text} value={option.value} />\n                ))}\n              </Select>\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\n\nfunction LoginPage(props) {\n  return <LoginForm />;\n}\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function SignupForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [firstName, handleFirstNameChange] = useState(\"\");\n  const [lastName, handleLastNameChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.createStudent(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push(\"/schedule/student/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create student.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.createProfessor(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          history.push(\"/schedule/professor/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create professor.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Grid className=\"signup-form\">\n      <Form onSubmit={submitHandler}>\n        <Row>\n          <h2>Create an account</h2>\n        </Row>\n        <br></br>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"email-input\" legendText=\"Email\">\n              <TextInput\n                id=\"email\"\n                value={email}\n                placeholdertext=\"Email\"\n                helperText=\"Please enter your email to view your schedule.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleEmailChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup className=\"firstname-input\" legendText=\"First Name\">\n              <TextInput\n                id=\"firstName\"\n                value={firstName}\n                placeholdertext=\"First Name\"\n                helperText=\"Please enter your first name.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleFirstNameChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n\n          <Column>\n            <FormGroup className=\"lastName-input\" legendText=\"Last Name\">\n              <TextInput\n                id=\"lastName\"\n                value={lastName}\n                placeholdertext=\"Last Name\"\n                helperText=\"Please enter your last name.\"\n                labelText={false}\n                onChange={(e) => {\n                  handleLastNameChange(e.target.value);\n                }}\n              />\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Column>\n            <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n              <Select\n                value={user}\n                onChange={(e) => {\n                  handleUserSelect(e.target.value);\n                }}\n                hideLabel={true}\n                id=\"lectureStyle\"\n              >\n                {userTypeOptions.map((option) => (\n                  <SelectItem text={option.text} value={option.value} />\n                ))}\n              </Select>\n            </FormGroup>\n          </Column>\n        </Row>\n\n        <Row>\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport SignupForm from \"./SignupForm\";\n\nfunction SignupPage(props) {\n  return <SignupForm />;\n}\nexport default SignupPage;\n","import React from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  Checkbox,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default class CreateCourseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courseId: \"\",\n      courseName: \"\",\n      section: \"\",\n      school: \"\",\n      zoomLink: \"\",\n      days: {\n        Monday: false,\n        Tuesday: false,\n        Wednesday: false,\n        Thursday: false,\n        Friday: false,\n      },\n      startDate: \"2021-01-25\",\n      endDate: \"2021-04-29\",\n      startTime: \"\",\n      startTimeSelect: \"\",\n      endTime: \"\",\n      endTimeSelect: \"\",\n      lectureStyle: \"Hybrid\",\n    };\n\n    this.onLectureStyleChange = (event) => {\n      this.setState({ lectureStyle: event.target.value });\n    };\n\n    this.onSchoolChange = (event) => {\n      this.setState({ school: event.target.value });\n    };\n\n    this.handleTextInputChange = (event) => {\n      const id = event.target.id;\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.handleTimeInput = (event) => {\n      console.log(event);\n      const id = event.target.id;\n\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.onStartTimeSelect = (event) => {\n      this.setState({ startTimeSelect: event.target.value });\n    };\n\n    this.onEndTimeSelect = (event) => {\n      this.setState({ endTimeSelect: event.target.value });\n    };\n\n    this.handleDaySelect = (checked, id, event) => {\n      if (checked != this.state.days[id]) {\n        const currentDayState = this.state.days;\n        currentDayState[id] = checked;\n        this.setState({ days: currentDayState });\n      }\n    };\n\n    this.schoolOptions = [\n      { text: \"Choose a school\", label: \"placeholder-item\" },\n      {\n        text: \"College of Arts and Sciences\",\n        value: \"College of Arts and Sciences\",\n      },\n      {\n        text: \"College of Fine Arts\",\n        value: \"College of Fine Arts\",\n      },\n      {\n        text: \"Questrom School of Business\",\n        value: \"Questrom School of Business\",\n      },\n      {\n        text: \"College of Engineering\",\n        value: \"College of Engineering\",\n      },\n      {\n        text: \"College of Communication\",\n        value: \"College of Communication\",\n      },\n      {\n        text: \"College of General Studies\",\n        value: \"College of General Studies\",\n      },\n      {\n        text: \"School of Hospitality Administration\",\n        value: \"School of Hospitality Administration\",\n      },\n    ];\n\n    this.lectureStyleOptions = [\n      { text: \"Choose a lecture style\", value: \"placeholder-item\" },\n      { text: \"Hybrid\", value: \"Hybrid\" },\n      { text: \"InPerson\", value: \"InPerson\" },\n      { text: \"Remote\", value: \"Remote\" },\n    ];\n\n    this.submitHandler = (e) => {\n      var {\n        courseId,\n        courseName,\n        section,\n        school,\n        zoomLink,\n        days,\n        startDate,\n        endDate,\n        startTime,\n        startTimeSelect,\n        endTime,\n        endTimeSelect,\n        lectureStyle,\n      } = this.state;\n\n      let parsedDays = [];\n      for (const day in this.state.days) {\n        if (days[day]) {\n          parsedDays.push(day.slice(0, 3));\n        }\n      }\n\n      if (startTimeSelect == \"PM\") {\n        const [sh, sm] = startTime.split(\":\");\n        if (sh != 12) {\n          startTime = 12 + +sh + \":\" + sm;\n        }\n      }\n\n      if (endTimeSelect == \"PM\") {\n        const [eh, em] = endTime.split(\":\");\n        if (eh != 12) {\n          endTime = 12 + +eh + \":\" + em;\n        }\n      }\n\n      // console.log(courseId);\n      // console.log(courseName);\n      // console.log(section);\n      api\n        .createCourseStudent(\n          courseId,\n          courseName,\n          section,\n          school,\n          zoomLink,\n          parsedDays,\n          startDate,\n          endDate,\n          startTime,\n          endTime,\n          lectureStyle,\n          this.props.studentId\n        )\n        .then((res) => {\n          if (res == null) {\n            alert(\n              \"Unable to create course. Please screenshot form and send to dev team.\"\n            );\n            console.log(\"Unable to create course.\");\n          } else {\n            alert(\"Course succesfully created.\");\n            console.log(\"Course created.\");\n            console.log(res);\n          }\n        });\n\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const {\n      courseId,\n      courseName,\n      section,\n      zoomLink,\n      startTimeSelect,\n      endTimeSelect,\n    } = this.state;\n    console.log(this.state);\n    console.log(this.props);\n\n    return (\n      <div>\n        <Grid className=\"course-form\">\n          <Form onSubmit={this.submitHandler}>\n            <Row>\n              <h2>Create Course</h2>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"course-id-input\" legendText=\"Course ID\">\n                  <TextInput\n                    id=\"courseId\"\n                    value={courseId}\n                    helperText=\"Please provide the course ID (i.e. CS111)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  className=\"course-name-input\"\n                  legendText=\"Course Name\"\n                >\n                  <TextInput\n                    id=\"courseName\"\n                    value={courseName}\n                    helperText=\"Please provide the course name (i.e. Intro to Computer Science)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"section-input\" legendText=\"Section\">\n                  <TextInput\n                    id=\"section\"\n                    value={section}\n                    helperText=\"Please provide the course section (i.e. A1)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"school-select\" legendText=\"Select School\">\n                  <Select\n                    value={this.state.school}\n                    onChange={this.onSchoolChange}\n                    id=\"school\"\n                    hideLabel={true}\n                  >\n                    {this.schoolOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup label=\"zoom-link-input\" legendText=\"Zoom Link\">\n                  <TextInput\n                    id=\"zoomLink\"\n                    value={zoomLink}\n                    helperText=\"Please provide the zoom link\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup\n                  label=\"start-time-input\"\n                  legendText=\"Lecture Start Time\"\n                >\n                  <TimePicker\n                    id=\"startTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      value={startTimeSelect}\n                      labelText={\"Time of day\"}\n                      onChange={this.onStartTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"end-time-input\" legendText=\"Lecture End Time\">\n                  <TimePicker\n                    id=\"endTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                    maxLength={5}\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      labelText={\"Time of day\"}\n                      value={endTimeSelect}\n                      onChange={this.onEndTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  label=\"lecture-style-select\"\n                  legendText=\"Lecture Style\"\n                >\n                  <Select\n                    value={this.state.lectureStyle}\n                    onChange={this.onLectureStyleChange}\n                    hideLabel={true}\n                    id=\"lectureStyle\"\n                  >\n                    {this.lectureStyleOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <FormGroup label=\"days-select\" legendText=\"Lecture Days\">\n              <Row>\n                <Column>\n                  <Checkbox\n                    id=\"Monday\"\n                    checked={this.state.days.Monday}\n                    className=\"checkbox-1\"\n                    labelText=\"Monday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Tuesday\"\n                    checked={this.state.days.Tuesday}\n                    className=\"checkbox-2\"\n                    labelText=\"Tuesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Wednesday\"\n                    checked={this.state.days.Wednesday}\n                    className=\"checkbox-3\"\n                    labelText=\"Wednesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Thursday\"\n                    checked={this.state.days.Thursday}\n                    className=\"checkbox-4\"\n                    labelText=\"Thursday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Friday\"\n                    checked={this.state.days.Friday}\n                    className=\"checkbox-5\"\n                    labelText=\"Friday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n              </Row>\n            </FormGroup>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import CreateCourseForm from \"./CreateCourseForm\";\nimport { useParams } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateCoursePage(props) {\n  return <CreateCourseForm studentId={props.location.state.user.id} />;\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  DatePicker,\n  DatePickerInput,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentForm(props) {\n  let [name, handleNameInput] = useState(\"\");\n  let [assignmentType, handleTypeInput] = useState(\"\");\n  let [dueDate, handleDueDateInput] = useState(\"\");\n  let [dueTime, handleDueTimeInput] = useState(\"\");\n  let [dueTimeSelect, handleDueTimeSelect] = useState(\"\");\n  let [courseSelect, handleCourseSelect] = useState(\"\");\n\n  const submitHandler = (event) => {\n    console.log(name);\n    console.log(assignmentType);\n    console.log(dueDate);\n    console.log(dueTime);\n    console.log(dueTimeSelect);\n  };\n\n  console.log(props);\n\n  return (\n    <div>\n      <Grid className=\"course-form\">\n        <Form onSubmit={(e) => submitHandler(e)}>\n          <Row>\n            <h2>Create Assignment</h2>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup className=\"name-input\" legendText=\"Name\">\n                <TextInput\n                  id=\"name\"\n                  value={name}\n                  labelText={false}\n                  helperText=\"Please provide the assignment name.\"\n                  onChange={(e) => {\n                    handleNameInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup\n                className=\"assignment-type-input\"\n                legendText=\"Assignment Type\"\n              >\n                <TextInput\n                  id=\"assignmentType\"\n                  value={assignmentType}\n                  labelText={false}\n                  helperText=\"Please provide the assignment type. i.e. Programming Assignment\"\n                  onChange={(e) => {\n                    handleTypeInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup label=\"due-date-picker\" legendText=\"Due Date\">\n                <DatePicker datePickerType=\"simple\" dateFormat=\"yyyy-M-d\">\n                  <DatePickerInput\n                    placeholder=\"yyyy-m-d\"\n                    id=\"due-date-input\"\n                    value={dueDate}\n                    onChange={(e) => handleDueDateInput(e.target.value)}\n                  ></DatePickerInput>\n                </DatePicker>\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup label=\"due-time-input\" legendText=\"Time Due\">\n                <TimePicker\n                  id=\"dueTime\"\n                  value={dueTime}\n                  onChange={(e) => handleDueTimeInput(e.target.value)}\n                  placeholder=\"hh:mm\"\n                  maxLength={5}\n                >\n                  <TimePickerSelect\n                    id=\"time-picker-select\"\n                    labelText={\"Time of day\"}\n                    value={dueTimeSelect}\n                    onChange={(e) => {\n                      handleDueTimeSelect(e.target.value);\n                    }}\n                  >\n                    <SelectItem value=\"AM\" text=\"AM\" />\n                    <SelectItem value=\"PM\" text=\"PM\" />\n                  </TimePickerSelect>\n                </TimePicker>\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Grid>\n    </div>\n  );\n}\n","import CreateAssignmentForm from \"./CreateAssignmentForm\";\nimport { useLocation } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentPage() {\n  const location = useLocation();\n\n  return <CreateAssignmentForm user={location.state.user} />;\n}\n","import \"./App.scss\";\n// import React, { useState, useEffect } from 'react';\n// import { Content } from \"carbon-components-react\";\nimport SchedulePage from \"./pages/schedule/SchedulePage\";\nimport LoginPage from \"./pages/login/LoginPage\";\nimport SignupPage from \"./pages/signup/SignupPage\";\nimport CreateCoursePage from \"./pages/createCourse/CreateCoursePage\";\nimport CreateAssignmentPage from \"./pages/createAssignment/CreateAssignmentPage\";\nimport HomePage from \"./pages/home/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignupPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/createCourse\" component={CreateCoursePage} />\n          <Route path=\"/createAssignment\" component={CreateAssignmentPage} />\n          <Route path=\"/schedule\" component={SchedulePage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n// import 'node_modules/core-js/modules/es7.array.includes';\n// import 'node_modules/core-js/modules/es6.array.fill';\n// import 'node_modules/core-js/modules/es6.string.includes';\n// import 'node_modules/core-js/modules/es6.string.trim';\n// import 'node_modules/core-js/modules/es7.object.values';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}