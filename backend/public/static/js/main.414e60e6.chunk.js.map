{"version":3,"sources":["components/BackButton.js","components/Badge.js","pages/schedule/components/DayHeader.js","apiHandle.js","components/LectureCard.js","components/AssignmentCard.js","pages/schedule/components/SyllabusView.js","pages/schedule/Day.js","pages/schedule/Calendar.js","assets/logo.png","components/HeaderNav.js","pages/schedule/SchedulePage.js","pages/login/LoginForm.js","pages/login/LoginPage.js","pages/signup/SignupForm.js","pages/signup/SignupPage.js","pages/createCourse/CreateCourseForm.js","pages/createCourse/CreateCoursePage.js","pages/createAssignment/CreateAssignmentForm.js","pages/createAssignment/CreateAssignmentPage.js","pages/assignments/AssignmentsView.js","pages/assignments/AssignmentsPage.js","components/ExamCard.js","pages/exams/ExamsView.js","pages/exams/ExamsPage.js","App.js","reportWebVitals.js","index.js"],"names":["BackButton","props","className","onClick","parentCallback","expandedCourse","syllabusView","expand","aria-label","Badge","type","assignments","length","to","pathname","state","user","exams","DayHeader","style","textAlign","display","flexDirection","today","format","fullDate","getStudents","a","axios","get","response","data","getStudentByEmail","email","method","url","createStudent","firstName","lastName","deleteStudent","getProfessors","getProfessorByEmail","createProfessor","deleteProfessor","getCourses","createCourse","courseId","courseName","section","school","zoomLink","days","startDate","endDate","startTime","endTime","lectureStyle","createCourseStudent","studentId","getLectures","getModifiedLecture","date","lectureDate","getLabs","createAssignment","name","assignmentType","assignedDate","assignedTime","dueDate","dueTime","tags","parseTime","split","sh","sm","eh","em","LectureCard","expanded","background","target","rel","href","assignmentsDue","id","AssignmentCard","parse","Date","time","hours","minutes","Course","map","t","SyllabusView","right_side_css","course","syllabusViewType","color","e","professor","Day","parseInt","handleCallback","toExpand","courses","find","c","console","log","setState","childCallback","lectures","labs","prevExpand","colWidth","test","this","filter","includes","day","forEach","assignment","parseISO","isSameDay","push","exam","sortedLectures","sort","l1","l2","getEWidth","prevProps","width","elem","document","querySelector","clientWidth","i","section_css","transform","indexExpanded","findIndex","lec","splice","unshift","showFull","React","Component","Calendar","daySliderHandler","value","daysrefs","prevState","dataLoaded","index","wrapper","dayidx","entries","findExpandedDay","expandDay","day_list","addDays","Grid","narrow","Row","Column","Slider","ariaLabelInput","max","min","onChange","changeDayVal","lg","Math","floor","HeaderNav","useState","open","setOpen","setDate","handleDayClick","SideNav","isFixedNav","isChildOfHeader","List","component","minHeight","position","ListItem","ListItemIcon","src","logo","height","button","fill","Collapse","in","timeout","unmountOnExit","disablePadding","lab","bottom","onDayClick","selectedDays","showOutsideDays","disabledKeyboardNavigation","SchedulePage","location","useLocation","setDay","childData","changeDate","Content","LoginForm","handleEmailChange","handleUserSelect","history","useHistory","Form","onSubmit","event","api","then","res","alert","preventDefault","FormGroup","legendText","TextInput","placeholdertext","helperText","labelText","label","Select","hideLabel","text","option","SelectItem","Button","variant","LoginPage","SignupForm","handleFirstNameChange","handleLastNameChange","SignupPage","CreateCourseForm","Monday","Tuesday","Wednesday","Thursday","Friday","startTimeSelect","endTimeSelect","onLectureStyleChange","onSchoolChange","handleTextInputChange","handleTimeInput","onStartTimeSelect","onEndTimeSelect","handleDaySelect","checked","currentDayState","schoolOptions","lectureStyleOptions","submitHandler","parsedDays","slice","TimePicker","placeholder","TimePickerSelect","maxLength","Checkbox","CreateCoursePage","CreateAssignmentForm","handleNameInput","handleTypeInput","handleDueDateInput","handleDueTimeInput","dueTimeSelect","handleDueTimeSelect","DatePicker","datePickerType","dateFormat","DatePickerInput","CreateAssignmentPage","ClassColumn","a1","a2","AssignmentsView","ExamCard","size","e1","e2","ExamsView","class","ExamsPage","App","exact","path","AssignmentsPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.414e60e6.chunk.js","sourcesContent":["import React from \"react\";\nimport { ChevronLeft32 } from \"@carbon/icons-react\";\n\nexport default function BackButton(props) {\n  return (\n    <button\n      className=\"icon-text\"\n      onClick={() => {\n        props.parentCallback({\n          expandedCourse: null,\n          syllabusView: false,\n          expand: \"no-expand\",\n        });\n      }}\n    >\n      <ChevronLeft32 aria-label=\"backSchedule\" className=\"back-button\" />\n      <p>Schedule</p>\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Badge(props) {\n  if (props.type === \"assignments\") {\n    if (props.assignments.length != 0) {\n      return (\n        <button className=\"badge assignments\">\n          <Link\n            className=\"badge link\"\n            to={{\n              pathname: \"/assignments\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <p>\n              {props.assignments.length} Assignment\n              {props.assignments.length == 1 ? false : \"s\"} Due\n            </p>\n          </Link>\n        </button>\n      );\n    } else {\n      return null;\n    }\n  } else if (props.type === \"exams\") {\n    if (props.exams.length != 0) {\n      return (\n        <button className=\"badge exams\">\n          <Link\n            className=\"badge link\"\n            to={{\n              pathname: \"/exams\",\n              state: { user: props.user },\n            }}\n          >\n            <p>\n              {props.exams.length} Exam\n              {props.exams.length == 1 ? false : \"s\"} Due\n            </p>\n          </Link>\n        </button>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nexport default function DayHeader(props) {\n  let style = {};\n  if (props.expand === \"is-expanded\") {\n    style = { textAlign: \"left\", display: \"flex\", flexDirection: \"row\" };\n    return (\n      <div\n        className={props.today ? \"date-today\" : \"date\"}\n        style={style}\n        onClick={() =>\n          props.parentCallback(\n            props.expand === \"is-expanded\"\n              ? {\n                  expand: \"no-expand\",\n                  expandedCourse: null,\n                  syllabusView: false,\n                }\n              : { expand: \"is-expanded\" }\n          )\n        }\n      >\n        <h4 className=\"clndr-day\">\n          {format(props.fullDate, \"eeee',' LLLL do\")}\n        </h4>\n      </div>\n    );\n  } else {\n    style = { textAlign: \"center\" };\n    return (\n      <div\n        className={props.today ? \"date-today\" : \"date\"}\n        style={style}\n        onClick={() =>\n          props.parentCallback(\n            props.expand === \"is-expanded\"\n              ? {\n                  expand: \"no-expand\",\n                  expandedCourse: null,\n                  syllabusView: false,\n                }\n              : { expand: \"is-expanded\" }\n          )\n        }\n      >\n        <h3 className=\"clndr-day\">{format(props.fullDate, \"eee\")}</h3>\n        <h4 className=\"clndr-date\">{format(props.fullDate, \"dd\")}</h4>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// var config = {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Access-Control-Allow-Origin\": \"*\",\n//   },\n// };\n\nconst getStudents = async () => {\n  const response = await axios.get(\"/students\");\n  return response.data;\n};\n\nconst getStudentByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getStudent\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createStudent = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/students\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteStudent = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/students\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getProfessors = async () => {\n  const response = await axios.get(\"/professor\");\n  return response.data;\n};\n\nconst getProfessorByEmail = async (email) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getProfessor\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst createProfessor = async (email, firstName, lastName) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/professors\",\n    data: { email: email, firstName: firstName, lastName: lastName },\n  });\n  return response.data;\n};\n\nconst deleteProfessor = async (email) => {\n  const response = await axios({\n    method: \"delete\",\n    url: \"/professors\",\n    data: { email: email },\n  });\n  return response.data;\n};\n\nconst getCourses = async () => {\n  const response = await axios.get(\"/courses\");\n  return response.data;\n};\n\nconst createCourse = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n    },\n  });\n  return response.data;\n};\n\nconst createCourseStudent = async (\n  courseId,\n  courseName,\n  section,\n  school,\n  zoomLink,\n  days,\n  startDate,\n  endDate,\n  startTime,\n  endTime,\n  lectureStyle,\n  studentId\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/addCourseStudent\",\n    data: {\n      courseId: courseId,\n      courseName: courseName,\n      section: section,\n      school: school,\n      zoomLink: zoomLink,\n      days: days,\n      startDate: startDate,\n      endDate: endDate,\n      startTime: startTime,\n      endTime: endTime,\n      lectureStyle: lectureStyle,\n      studentId: studentId,\n    },\n  });\n  return response.data;\n};\n\nconst getLectures = async () => {\n  const response = await axios.get(\"/lectures\");\n  return response.data;\n};\n\nconst getModifiedLecture = async (courseId, date) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/getLecture\",\n    data: { courseId: courseId, lectureDate: date },\n  });\n  return response.data;\n};\n\nconst getLabs = async () => {\n  const response = await axios.get(\"/labs\");\n  return response.data;\n};\n\nconst createAssignment = async (\n  courseId,\n  name,\n  assignmentType,\n  assignedDate,\n  assignedTime,\n  dueDate,\n  dueTime,\n  tags\n) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/courses\",\n    data: {\n      courseId,\n      name,\n      assignmentType,\n      assignedDate,\n      assignedTime,\n      dueDate,\n      dueTime,\n      tags,\n    },\n  });\n  return response.data;\n};\n\nexport default {\n  getStudents,\n  getStudentByEmail,\n  createStudent,\n  createCourseStudent,\n  deleteStudent,\n  getProfessors,\n  getProfessorByEmail,\n  createProfessor,\n  deleteProfessor,\n  getCourses,\n  createCourse,\n  getLectures,\n  getModifiedLecture,\n  getLabs,\n  createAssignment,\n};\n","import React from \"react\";\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (startTime, endTime) => {\n  const [sh, sm] = startTime.split(\":\");\n  const [eh, em] = endTime.split(\":\");\n\n  if (sh < 12 && eh >= 12) {\n    return sh + \":\" + sm + \" AM - \" + eh + \":\" + em + \" PM\";\n  } else if (sh < 12) {\n    return sh + \":\" + sm + \" - \" + eh + \":\" + em + \" AM\";\n  } else {\n    return (\n      (sh == 12 ? sh : sh - 12) +\n      \":\" +\n      sm +\n      \" - \" +\n      (eh == 12 ? eh : eh - 12) +\n      \":\" +\n      em +\n      \" PM\"\n    );\n  }\n};\n\nfunction LectureCard(props) {\n  // const [syllabusView, setView] = useState(false);\n  // console.log(props);\n\n  //need to add 'button' to these things\n\n  return (\n    <div\n      key={props.id}\n      className=\"course\"\n      style={props.expanded ? { background: \"rgba(247, 190, 150, 0.164)\" } : {}}\n      onClick={() => props.parentCallback(props.courseId)}\n    >\n      {/* Course Code (or 'Lab' if lab */}\n      {props.courseName != null ? (\n        <div className=\"fullname-course\">\n          <h4 className=\"black\"> {props.courseId} </h4>\n        </div>\n      ) : (\n        <div className=\"fullname-course\">\n          <h5 className=\"black\">{props.courseId + \" | Lab\"}</h5>\n        </div>\n      )}\n\n      {/* Name of course */}\n      <div\n        className=\"fullname-course\"\n        // style={{ overflow: \"hidden\"}}\n      >\n        <h4 className=\"black\">{props.courseName}</h4>\n      </div>\n\n      {/* Time */}\n      <div className=\"time\">\n        <h5>{parseTime(props.startTime, props.endTime)} </h5>\n      </div>\n\n      <br></br>\n\n      <div className=\"zoomlink\">\n        <a\n          className=\"link blue\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={props.zoomLink}\n        >\n          <h5 style={{ display: \"inline-block\" }}>Zoom Link</h5>\n        </a>\n        <div\n          className=\"zoom-info\"\n          style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n        >\n          <p>Meeting Id:</p>\n          <p>Password:</p>\n        </div>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        <ul>\n          {/* <li>\n            <a\n              className=\"black\"\n              style={{ display: props.showFull ? \"block\" : \"none\" }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              // href=\"blackboard.com\"\n            >\n              Lecture Slides\n            </a>\n          </li> */}\n\n          {/* <li>\n            {props.piazzaLink != null ? (\n              <a\n                className=\"black\"\n                style={{ display: props.showFull ? \"block\" : \"none\" }}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                // href={props.piazzaLink}\n              >\n                Piazza Page\n              </a>\n            ) : (\n              false\n            )}\n          </li> */}\n          {/* <li>Course Page</li> */}\n          <li className=\"orange\">\n            <h5>\n              {props.assignmentsDue > 0\n                ? props.assignmentsDue +\n                  \" Assignment\" +\n                  (props.assignmentsDue === 1 ? \" due\" : \" s due\")\n                : \"\"}\n            </h5>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default LectureCard;\n","import { format, parse } from \"date-fns\";\nimport React from \"react\";\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  if (hours === \"12\" && minutes === \"00\") {\n    return \"Noon\";\n  } else {\n    return (\n      (hours >= 13 ? hours - 12 : hours) +\n      \":\" +\n      (minutes == 0 ? \"00\" : minutes) +\n      (hours >= 12 ? \" PM\" : \" AM\")\n    );\n  }\n};\n\nexport default function AssignmentCard(props) {\n  const dueDate = format(\n    parse(props.dueDate, \"yyyy-MM-d\", new Date()),\n    \"MMM do\"\n  );\n  const dueTime = parseTime(props.dueTime);\n\n  return (\n    <div key={props.id} className=\"assignment\">\n      <div>\n        <h6>{props.Course.courseId}</h6>\n        <h4>{props.name}</h4>\n        <br></br>\n        <h6>{\"Due: \" + dueDate + \" - \" + dueTime}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        // style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        {props.tags.map((t) => {\n          return <button className=\"tag\">{t}</button>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AssignmentCard from \"../../../components/AssignmentCard\";\nimport ExamCard from \"../../../components/AssignmentCard\";\nimport { ChevronLeft32 } from \"@carbon/icons-react\";\n\nexport default function SyllabusView(props) {\n  var right_side_css = {\n    display:\n      props.expand === \"is-expanded\" && props.syllabusView ? \"block\" : \"none\",\n  };\n\n  const { course, type } = props;\n\n  switch (type) {\n    case \"assignments\":\n      return (\n        <div className=\"right-side\" style={right_side_css}>\n          <button\n            className=\"icon-text\"\n            onClick={() =>\n              props.parentCallback({ syllabusViewType: \"course-overview\" })\n            }\n          >\n            <ChevronLeft32 aria-label=\"backSchedule\" className=\"back-button\" />\n            <p>{course.courseId + \" - \" + course.courseName}</p>\n          </button>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div className=\"syllabus-column\">\n              <h4>Assignments:</h4>\n              <br></br>\n\n              {course.assignments.length == 0 ? (\n                <p>No assignments for this course.</p>\n              ) : (\n                course.assignments.map((a) => {\n                  return <AssignmentCard {...a} />;\n                })\n              )}\n            </div>\n          </div>\n        </div>\n      );\n\n    case \"exams\":\n      return (\n        <div className=\"right-side\" style={right_side_css}>\n          <button\n            className=\"icon-text\"\n            onClick={() =>\n              props.parentCallback({ syllabusViewType: \"course-overview\" })\n            }\n          >\n            <ChevronLeft32 aria-label=\"backSchedule\" className=\"back-button\" />\n            <p>{course.courseId + \" - \" + course.courseName}</p>\n          </button>\n\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div className=\"syllabus-column\">\n              <h4>\n                All exams for{\" \"}\n                {<span style={{ color: \"orange\" }}>{course.courseId}</span>}:\n              </h4>\n\n              {course.exams.length == 0 ? (\n                <p>No exams for this course.</p>\n              ) : (\n                course.exams.map((e) => {\n                  return <ExamCard {...e} />;\n                })\n              )}\n            </div>\n          </div>\n        </div>\n      );\n\n    case \"course-overview\":\n      return (\n        <div className=\"right-side\" style={right_side_css}>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"syllabus-column\">\n              <h5 style={{ color: \"gray\" }}>\n                {`${course.courseId} - ${course.courseName} ${course.section}`}\n              </h5>\n              <br></br>\n\n              <h4>Office Hours:</h4>\n              <br></br>\n\n              <h5>{`Professor ${course.professor[0].firstName} ${course.professor[0].lastName}: Wednesday 10am-11am`}</h5>\n              <div className=\"zoomlink\">\n                <a\n                  className=\"blue\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  // href={props.zoomLink}\n                >\n                  <h5>Zoom Link</h5>\n                </a>\n              </div>\n              <br></br>\n\n              <h5>{`TA Fake TA-Man: Monday 12pm-1pm`}</h5>\n              <div className=\"zoomlink\">\n                <a\n                  className=\"blue\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  // href={props.zoomLink}\n                >\n                  <h5>Zoom Link</h5>\n                </a>\n              </div>\n              <br></br>\n\n              <h4>\n                Due today:{\" \"}\n                <button\n                  className=\"see-all\"\n                  onClick={() =>\n                    props.parentCallback({ syllabusViewType: \"assignments\" })\n                  }\n                >\n                  <h4>See all</h4>\n                </button>\n              </h4>\n              <br></br>\n              {course.assignments.length == 0 ? (\n                <p>No assignments due today.</p>\n              ) : (\n                course.assignments.map((a) => {\n                  return (\n                    <button key={a.id} className={\"assignment-small\"}>\n                      <div>\n                        <h5>{a.name}</h5>\n                      </div>\n                    </button>\n                  );\n                })\n              )}\n\n              <h4>\n                Exams today:{\" \"}\n                <button\n                  className=\"see-all\"\n                  onClick={() =>\n                    props.parentCallback({ syllabusViewType: \"exams\" })\n                  }\n                >\n                  <h4>See all</h4>\n                </button>\n              </h4>\n              <br></br>\n              {course.exams.length == 0 ? (\n                <p>No exams for this course.</p>\n              ) : (\n                course.exams.map((e) => {\n                  return (\n                    <button key={e.id} className={\"exam-small\"}>\n                      <div>\n                        <h5>{e.name}</h5>\n                      </div>\n                    </button>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BackButton from \"../../components/BackButton\";\nimport Badge from \"../../components/Badge\";\nimport DayHeader from \"./components/DayHeader\";\nimport api from \"../../apiHandle\";\nimport { parseISO, isSameDay } from \"date-fns\";\nimport LectureCard from \"../../components/LectureCard\";\nimport AssignmentCard from \"../../components/AssignmentCard\";\nimport ExamCard from \"../../components/AssignmentCard\";\nimport SyllabusView from \"./components/SyllabusView\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lectures: [],\n      labs: [],\n      assignments: [],\n      exams: [],\n      expand: \"no-expand\", //classname to add to day component to indicate css transition\n      prevExpand: \"no-expand\", //set previous state of expansion to prevent repeated events into expanded view\n      expandedCourse: null,\n      syllabusView: false,\n      syllabusViewType: \"course-overview\",\n      colWidth: 0,\n    };\n    this.test = false;\n  }\n\n  backButtonCallback() {\n    this.setState({\n      expandedCourse: null,\n      syllabusView: false,\n      expand: \"no-expand\",\n    });\n  }\n\n  componentDidMount() {\n    const lectures = this.props.user.courses.filter((course) => {\n      if (course.days.includes(this.props.day)) {\n        return course;\n      }\n    });\n\n    const assignments = [];\n    const exams = [];\n    this.props.user.courses.forEach((course) => {\n      course.assignments.forEach((assignment) => {\n        const dueDate = parseISO(assignment.dueDate, \"yyyy-MM-dd\", new Date());\n        if (isSameDay(dueDate, this.props.fullDate)) {\n          assignments.push(assignment);\n        }\n      });\n\n      course.exams.map((exam) => {\n        if (\n          isSameDay(\n            parseISO(exam.dueDate, \"yyyy-MM-dd\", new Date()),\n            this.props.fullDate\n          )\n        ) {\n          exams.push(exam);\n        }\n      });\n    });\n\n    const sortedLectures = lectures.sort(\n      (l1, l2) => this.parseTime(l1.startTime) - this.parseTime(l2.startTime)\n    );\n\n    this.setState({\n      lectures: sortedLectures,\n      assignments: assignments,\n      exams: exams,\n      colWidth: this.getEWidth(),\n    });\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.day !== this.props.day) {\n      this.setState({\n        day: this.props.day,\n      });\n    }\n    if (this.state.expand === \"is-expanded\") {\n      let width = this.getEWidth();\n      width !== this.state.colWidth &&\n        this.setState({\n          colWidth: width,\n        });\n    }\n  }\n\n  parseTime = (time) => {\n    let t = time.split(\":\");\n    let hours = parseInt(t[0]);\n    let minutes = parseInt(t[1]) / 60;\n\n    return hours + minutes;\n  };\n\n  handleCallback = (courseId) => {\n    var toExpand = this.props.user.courses.find((c) => c.courseId === courseId);\n    console.log(toExpand);\n    // If day is expanded AND a course's syllabus view is open\n    //    If clicked course is currently open course, close syllabusview\n    if (this.state.expand === \"is-expanded\" && this.state.syllabusView) {\n      if (toExpand.courseId !== this.state.expandedCourse.courseId) {\n        this.setState({\n          expandedCourse: toExpand,\n          syllabusViewType: \"course-overview\",\n        });\n      } else {\n        this.setState({\n          expandedCourse: null,\n          syllabusView: false,\n          expand: \"no-expand\",\n        });\n      }\n\n      // If day is expanded AND no syllabus view is open\n      //    Open course's syllabus view\n    } else if (\n      this.state.expand === \"is-expanded\" &&\n      !this.state.syllabusView\n    ) {\n      this.setState({\n        syllabusView: true,\n        expandedCourse: toExpand,\n        syllabusViewType: \"course-overview\",\n      });\n\n      // If day is not expanded\n      //    Expand day and open clicked course's syllabus view\n    } else if (this.state.expand === \"no-expand\") {\n      this.setState({\n        expand: \"is-expanded\",\n        syllabusViewType: \"course-overview\",\n        syllabusView: true,\n        expandedCourse: toExpand,\n      });\n    }\n  };\n\n  childCallback = (data) => {\n    this.setState(data);\n    this.props.parentCallback(data);\n  };\n\n  getEWidth() {\n    let elem;\n    if (this.props.days > 1) {\n      elem = document.querySelector(\".no-expand\");\n    }\n    return this.props.days > 1 ? elem.clientWidth : 0;\n  }\n\n  render() {\n    var {\n      lectures,\n      expandedCourse,\n      syllabusView,\n      syllabusViewType,\n      colWidth,\n      expand,\n      assignments,\n      exams,\n    } = this.state;\n    var { user, today, i, fullDate, days } = this.props;\n\n    var section_css =\n      expand === \"is-expanded\"\n        ? {\n            transform: `translateX(calc(-${\n              colWidth * i\n            }px - calc(1rem *  ${i})))`,\n          }\n        : { transform: `translateX(0px)` };\n\n    if (expandedCourse !== null) {\n      const indexExpanded = lectures.findIndex(\n        (lec) => lec.courseId === expandedCourse.courseId\n      );\n      lectures.splice(indexExpanded, 1);\n      lectures.unshift(expandedCourse);\n    } else {\n      lectures.sort(\n        (l1, l2) => this.parseTime(l1.startTime) - this.parseTime(l2.startTime)\n      );\n    }\n\n    return (\n      <section\n        id={\"clndr-col-\" + i}\n        className={\"day-col \" + expand + (today ? \" clndr-today\" : \"\")}\n        style={section_css}\n      >\n        {expand === \"is-expanded\" ? (\n          <BackButton parentCallback={this.childCallback} type=\"day-view\" />\n        ) : (\n          false\n        )}\n\n        <DayHeader\n          expand={expand}\n          today={today}\n          fullDate={fullDate}\n          parentCallback={this.childCallback}\n        />\n\n        {expand === \"no-expand\" && (\n          //Exams badge\n          <div className=\"badge-contain\">\n            <Badge type=\"exams\" exams={exams} user={user} />\n            {/* // Assignments badge */}\n            <Badge type=\"assignments\" assignments={assignments} user={user} />\n          </div>\n        )}\n\n        <div className={expand === \"is-expanded\" ? \"flex\" : \"\"}>\n          <div className=\"courses\">\n            {lectures.length != 0 ? (\n              lectures.map((course) => {\n                return (\n                  <LectureCard\n                    key={course.courseId}\n                    {...course}\n                    expanded={\n                      this.state.expandedCourse !== null &&\n                      this.state.expandedCourse.courseId === course.courseId\n                    }\n                    assignmentsDue={this.state.assignments.length}\n                    expand={this.state.expand} //bool to toggle expanded view\n                    showFull={this.props.days <= 4} //show full zoom link when schedule is on 3-day view and below\n                    parentCallback={this.handleCallback}\n                    syllabusView={this.state.syllabusView} //bool to toggle right-hand side details\n                  />\n                );\n              })\n            ) : (\n              <div style={{ textAlign: \"center\" }}>\n                <h5>No classes</h5>\n              </div>\n            )}\n          </div>\n\n          {syllabusView ? (\n            <SyllabusView\n              course={expandedCourse}\n              fullDate={fullDate}\n              expand={expand}\n              showFull={days <= 4}\n              syllabusView={syllabusView}\n              type={syllabusViewType}\n              parentCallback={this.childCallback}\n            />\n          ) : (\n            false\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Day;\n","import React from \"react\";\nimport { Slider, Grid, Row, Column, Loading } from \"carbon-components-react\";\nimport { addDays, format } from \"date-fns\";\nimport Day from \"./Day\";\nimport api from \"../../apiHandle\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: props.day,\n      days: 3, //number of days shown in schedule page\n      dataLoaded: false,\n      user: props.user,\n      expand: \"no-expand\",\n    };\n    this.date = format(this.state.today, \"d\");\n    this.daysrefs = [];\n  }\n\n  // Handles day slider change to close any currently expanded days before re-rendering days\n  daySliderHandler = (value) => {\n    if (this.state.expand === \"expanded\") {\n      this.daysrefs.forEach((day) => {\n        if (day.state.expand === \"is-expanded\") {\n          day.setState((prevState) => {\n            return {\n              expand: \"no-expand\",\n              prevExpand: prevState.expand,\n            };\n          });\n        }\n      });\n    }\n    this.setState({ days: value });\n  };\n\n  shouldComponentUpdate() {\n    return this.state.days > 0;\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user,\n      today: this.props.day,\n      dataLoaded: true,\n    });\n  }\n\n  handleCallback = (data) => {\n    this.setState(data);\n  };\n\n  // toggles the state of the clicked day component and calendar component to expand/no-expand\n  expandDay(index, day) {\n    // console.log(index);\n    // console.log(day);\n\n    const wrapper = this.daysrefs[index].state;\n    // console.log(wrapper);\n    // var setexpand;\n\n    if (this.state.expand === \"no-expand\") {\n      this.daysrefs[index].setState((prevState) => {\n        return {\n          expand: \"is-expanded\",\n          prevExpand: prevState.expand,\n        };\n      });\n      this.setState({ expand: \"is-expanded\" });\n    } else {\n      if (wrapper.expand === \"is-expanded\") {\n        // console.log(\"minize!\");\n        this.daysrefs[index].setState((prevState) => {\n          return {\n            expand: \"no-expand\",\n            prevExpand: prevState.expand,\n          };\n        });\n        this.setState({ expand: \"no-expand\" });\n      }\n    }\n  }\n\n  //goes through Day components and finds out which index day is expanded\n  findExpandedDay() {\n    let dayidx;\n    for (const [index, val] of this.daysrefs.entries()) {\n      let dayrefState = val.state;\n      if (dayrefState.expand === \"is-expanded\") {\n        console.log(index);\n        dayidx = index;\n        break;\n      }\n    }\n    return dayidx;\n  }\n\n  changeDayVal(value) {\n    console.log(this.state.expand);\n    if (this.state.expand === \"is-expanded\") {\n      let day = this.findExpandedDay();\n      console.log(day);\n      this.expandDay(day, null);\n      this.state.expand === \"is-expanded\" && this.setState({ days: value });\n    }\n    console.log(this.state.expand);\n    console.log(value);\n    this.setState({ expand: \"no-expand\", days: value });\n  }\n\n  render() {\n    const day_list = [];\n    if (this.state.dataLoaded) {\n      for (let i = 0; i < this.state.days; i++) {\n        let day =\n          i === 0 ? (\n            <Day\n              key={i}\n              i={i}\n              today={true}\n              fullDate={this.state.today}\n              day={format(this.state.today, \"EEE\")}\n              days={this.state.days}\n              expand=\"no-expand\"\n              parentCallback={this.handleCallback}\n              user={this.state.user}\n            />\n          ) : (\n            <Day\n              key={i}\n              i={i}\n              today={false}\n              fullDate={addDays(this.state.today, i)}\n              day={format(addDays(this.state.today, i), \"EEE\")}\n              days={this.state.days}\n              expand=\"no-expand\"\n              parentCallback={this.handleCallback}\n              user={this.state.user}\n            />\n          );\n        day_list.push(day);\n      }\n    }\n\n    return (\n      <Grid id=\"calendar\" className=\"bx--grid calendar-contain\" narrow={true}>\n        <Row className=\"intro\">\n          {/*TODO: do a terneary operation is addDay.month == this.date.month ? show new month after emdash : don't show month */}\n          <Column>\n            <h3>\n              Hello,{\" \"}\n              <span className=\"user-first-name\">\n                {this.state.user.firstName}\n              </span>\n            </h3>\n\n            <h4 aria-label=\"calendar\" className=\"calendar-title\">\n              {format(this.state.today, \"cccc\") + \", \"}\n              {format(this.state.today, \"LLLL\")} {this.date}\n            </h4>\n          </Column>\n\n          <Column className=\"slider\">\n            <h4> {this.state.days} days </h4>\n            <div className=\"slider-row\">\n              <div>\n                <Slider\n                  ariaLabelInput=\"day slider\"\n                  className=\"day-slider\"\n                  max={5}\n                  min={1}\n                  value={3}\n                  onChange={({ value }) => this.changeDayVal(value)}\n                />\n              </div>\n            </div>\n          </Column>\n        </Row>\n\n        {this.state.dataLoaded ? (\n          <Row className=\"date-head\">\n            {day_list.map((day) => {\n              return (\n                <Column\n                  key={day.props.date}\n                  className=\"a-day\"\n                  lg={Math.floor(16 / this.state.days)}\n                >\n                  {day}\n                </Column>\n              );\n            })}\n          </Row>\n        ) : (\n          false\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Calendar;\n","export default __webpack_public_path__ + \"static/media/logo.3607ce5b.png\";","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport logo from \"../assets/logo.png\";\nimport \"../pages/schedule/calendar.scss\";\nimport { SideNav } from \"carbon-components-react\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"../pages/schedule/date-picker.scss\";\n\nexport default function HeaderNav(props) {\n  const [open, setOpen] = React.useState(true);\n  const [date, setDate] = React.useState(new Date());\n\n  const handleDayClick = async (day) => {\n    setDate(day);\n    console.log(day);\n    props.parentCallback(day);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const birthdayStyle = `.DayPicker-Day--highlighted {\n    background-color: orange;\n    color: white;\n  }`;\n\n  const modifiers = {\n    highlighted: new Date(),\n  };\n\n  return (\n    <SideNav\n      className=\"nav\"\n      isFixedNav\n      expanded={true}\n      isChildOfHeader={false}\n      aria-label=\"Side navigation\"\n    >\n      <List\n        component=\"nav\"\n        style={{ minHeight: \"100vh\", display: \"block\", position: \"relative\" }}\n      >\n        <ListItem component=\"div\" className=\"logo-header\">\n          <ListItemIcon>\n            <img className=\"logo\" src={logo} width=\"80px\" height=\"80px\"></img>\n          </ListItemIcon>\n          <Link className=\"nav-link-home\" to=\"/\">\n            <h2>Cadre</h2>\n            <br></br>\n          </Link>\n        </ListItem>\n\n        <ListItem>\n          <Link\n            className=\"nav-link\"\n            to={{\n              pathname: \"/schedule/student\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h4>Calendar</h4>\n          </Link>\n        </ListItem>\n\n        <ListItem>\n          <Link\n            className=\"nav-link\"\n            to={{\n              pathname: \"/assignments\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h4>Assignments</h4>\n          </Link>\n        </ListItem>\n\n        <ListItem>\n          <Link\n            className=\"nav-link\"\n            to={{\n              pathname: \"/exams\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h4>Exams</h4>\n          </Link>\n        </ListItem>\n\n        <ListItem>\n          <Link\n            className=\"nav-link\"\n            to={{\n              pathname: \"/createCourse\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h4>Create Course</h4>\n          </Link>\n        </ListItem>\n\n        <ListItem>\n          <Link\n            className=\"nav-link\"\n            to={{\n              pathname: \"/createAssignment\",\n              state: {\n                user: props.user,\n              },\n            }}\n          >\n            <h4>Create Assignment</h4>\n          </Link>\n        </ListItem>\n\n        <ListItem button onClick={handleClick}>\n          <h4 className=\"nav-link\">Zoom Links</h4>\n          {open ? (\n            <ExpandLess style={{ fill: \"white\" }} />\n          ) : (\n            <ExpandMore style={{ fill: \"white\" }} />\n          )}\n        </ListItem>\n\n        <Collapse in={!open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" className=\"zoom-link-list\" disablePadding>\n            {props.user.courses.map((course) => {\n              return (\n                <ListItem key={course.id}>\n                  <a\n                    className=\"nav-zoom-link\"\n                    href={course.zoomLink}\n                    target=\"_blank\"\n                  >\n                    {course.courseId + \" - \" + course.courseName}\n                  </a>\n                </ListItem>\n              );\n            })}\n            {props.user.labs.map((lab) => {\n              return (\n                <ListItem key={lab.id}>\n                  <a className=\"nav-zoom-link\" href={lab.zoomLink}>\n                    {lab.course.courseId + \" | Lab\"}\n                  </a>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Collapse>\n\n        {/* <ListItem className=\"signup-login\">\n            <Link className=\"nav-link\" to=\"/signup\" style={{color: \"white\", paddingLeft: \"1rem\"}}>\n                <p>Signup</p>\n            </Link>\n\n            <Link className=\"nav-link\" to=\"/login\" style={{color: \"white\", paddingLeft: \"1rem\"}}>\n                <p>Login</p>\n            </Link>\n        </ListItem> */}\n\n        <ListItem style={{ position: \"absolute\", bottom: 50 }}>\n          {/* <style>{birthdayStyle}</style> */}\n          <DayPicker\n            onDayClick={(day) => handleDayClick(day)}\n            selectedDays={date}\n            showOutsideDays\n            disabledKeyboardNavigation\n          />\n        </ListItem>\n      </List>\n    </SideNav>\n  );\n}\n","import React, { useState } from \"react\";\n// import {HomePage} from './home/HomePage'\nimport { useLocation } from \"react-router-dom\";\nimport Calendar from \"./Calendar\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport { format } from \"date-fns\";\nimport { Content } from \"carbon-components-react\";\n\nfunction SchedulePage(props) {\n  const location = useLocation();\n  const [day, setDay] = useState(new Date());\n\n  const changeDate = (childData) => {\n    console.log(childData);\n    setDay(childData);\n  };\n\n  return (\n    <div className=\"App\">\n      <HeaderNav\n        user={location.state.user}\n        parentCallback={(childData) => changeDate(childData)}\n      />\n      <Content>\n        <Calendar\n          key={format(day, \"M-d-y\")}\n          user={location.state.user}\n          day={day}\n        />\n      </Content>\n    </div>\n  );\n}\n\nexport default SchedulePage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function LoginForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.getStudentByEmail(email).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push({\n            pathname: \"/schedule/student\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find student with this email.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.getProfessorByEmail(email).then((res) => {\n        if (res != null) {\n          history.push({\n            pathname: \"/schedule/professor\",\n            state: { user: res },\n          });\n        } else {\n          alert(\"No user found. Redirecting to create account page.\");\n          history.push(\"/signup\");\n          console.log(\"Unable to find professor with this email.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Form onSubmit={submitHandler} className=\"login-page\">\n      <h2>Welcome to Cadre</h2>\n      <br></br>\n      <p>To view an example schedule, enter</p>\n      <p>email jmin@bu.edu and select Student.</p>\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <FormGroup className=\"email-input\" legendText=\"Email\">\n        <TextInput\n          id=\"email\"\n          value={email}\n          placeholdertext=\"Email\"\n          helperText=\"Please enter your email to view your schedule.\"\n          labelText={false}\n          onChange={(e) => {\n            handleEmailChange(e.target.value);\n          }}\n        />\n      </FormGroup>\n\n      <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n        <Select\n          value={user}\n          onChange={(e) => {\n            handleUserSelect(e.target.value);\n          }}\n          hideLabel={true}\n          id=\"lectureStyle\"\n        >\n          {userTypeOptions.map((option) => (\n            <SelectItem\n              key={option.value}\n              text={option.text}\n              value={option.value}\n            />\n          ))}\n        </Select>\n      </FormGroup>\n      <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport \"./form.scss\";\n\nfunction LoginPage(props) {\n  return <LoginForm />;\n}\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Button,\n  Select,\n  SelectItem,\n} from \"carbon-components-react/\";\nimport api from \"../../apiHandle\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./form.scss\";\n\nexport default function SignupForm() {\n  const [email, handleEmailChange] = useState(\"\");\n  const [firstName, handleFirstNameChange] = useState(\"\");\n  const [lastName, handleLastNameChange] = useState(\"\");\n  const [user, handleUserSelect] = useState(\"Student\");\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    if (user == \"Student\") {\n      api.createStudent(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          console.log(res);\n          history.push(\"/schedule/student/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create student.\");\n          console.log(res);\n        }\n      });\n    } else if (user == \"Professor\") {\n      api.createProfessor(email, firstName, lastName).then((res) => {\n        if (res != null) {\n          history.push(\"/schedule/professor/\" + email + \"/\" + res.id);\n        } else {\n          console.log(\"Unable to create professor.\");\n          console.log(res);\n        }\n      });\n    }\n    event.preventDefault();\n  };\n\n  const userTypeOptions = [\n    { text: \"Choose your role\", value: \"placeholder-item\" },\n    { text: \"Professor\", value: \"Professor\" },\n    { text: \"Student\", value: \"Student\" },\n  ];\n\n  return (\n    <Form onSubmit={submitHandler} className=\"signup-page\">\n      <h2>Create an account</h2>\n      <br></br>\n\n      <FormGroup className=\"email-input\" legendText=\"Email\">\n        <TextInput\n          id=\"email\"\n          value={email}\n          placeholdertext=\"Email\"\n          helperText=\"Please enter your email to view your schedule.\"\n          labelText={false}\n          onChange={(e) => {\n            handleEmailChange(e.target.value);\n          }}\n        />\n      </FormGroup>\n\n      <FormGroup className=\"firstname-input\" legendText=\"First Name\">\n        <TextInput\n          id=\"firstName\"\n          value={firstName}\n          placeholdertext=\"First Name\"\n          helperText=\"Please enter your first name.\"\n          labelText={false}\n          onChange={(e) => {\n            handleFirstNameChange(e.target.value);\n          }}\n        />\n      </FormGroup>\n\n      <FormGroup className=\"lastName-input\" legendText=\"Last Name\">\n        <TextInput\n          id=\"lastName\"\n          value={lastName}\n          placeholdertext=\"Last Name\"\n          helperText=\"Please enter your last name.\"\n          labelText={false}\n          onChange={(e) => {\n            handleLastNameChange(e.target.value);\n          }}\n        />\n      </FormGroup>\n\n      <FormGroup label=\"user-type-select\" legendText=\"Account Type\">\n        <Select\n          value={user}\n          onChange={(e) => {\n            handleUserSelect(e.target.value);\n          }}\n          hideLabel={true}\n          id=\"lectureStyle\"\n        >\n          {userTypeOptions.map((option) => (\n            <SelectItem text={option.text} value={option.value} />\n          ))}\n        </Select>\n      </FormGroup>\n\n      <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport SignupForm from \"./SignupForm\";\n\nfunction SignupPage(props) {\n  return <SignupForm />;\n}\nexport default SignupPage;\n","import React from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  Checkbox,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default class CreateCourseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courseId: \"\",\n      courseName: \"\",\n      section: \"\",\n      school: \"\",\n      zoomLink: \"\",\n      days: {\n        Monday: false,\n        Tuesday: false,\n        Wednesday: false,\n        Thursday: false,\n        Friday: false,\n      },\n      startDate: \"2021-01-25\",\n      endDate: \"2021-04-29\",\n      startTime: \"\",\n      startTimeSelect: \"\",\n      endTime: \"\",\n      endTimeSelect: \"\",\n      lectureStyle: \"Hybrid\",\n    };\n\n    this.onLectureStyleChange = (event) => {\n      this.setState({ lectureStyle: event.target.value });\n    };\n\n    this.onSchoolChange = (event) => {\n      this.setState({ school: event.target.value });\n    };\n\n    this.handleTextInputChange = (event) => {\n      const id = event.target.id;\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.handleTimeInput = (event) => {\n      console.log(event);\n      const id = event.target.id;\n\n      this.setState({ [id]: event.target.value });\n    };\n\n    this.onStartTimeSelect = (event) => {\n      this.setState({ startTimeSelect: event.target.value });\n    };\n\n    this.onEndTimeSelect = (event) => {\n      this.setState({ endTimeSelect: event.target.value });\n    };\n\n    this.handleDaySelect = (checked, id, event) => {\n      if (checked != this.state.days[id]) {\n        const currentDayState = this.state.days;\n        currentDayState[id] = checked;\n        this.setState({ days: currentDayState });\n      }\n    };\n\n    this.schoolOptions = [\n      { text: \"Choose a school\", label: \"placeholder-item\" },\n      {\n        text: \"College of Arts and Sciences\",\n        value: \"College of Arts and Sciences\",\n      },\n      {\n        text: \"College of Fine Arts\",\n        value: \"College of Fine Arts\",\n      },\n      {\n        text: \"Questrom School of Business\",\n        value: \"Questrom School of Business\",\n      },\n      {\n        text: \"College of Engineering\",\n        value: \"College of Engineering\",\n      },\n      {\n        text: \"College of Communication\",\n        value: \"College of Communication\",\n      },\n      {\n        text: \"College of General Studies\",\n        value: \"College of General Studies\",\n      },\n      {\n        text: \"School of Hospitality Administration\",\n        value: \"School of Hospitality Administration\",\n      },\n    ];\n\n    this.lectureStyleOptions = [\n      { text: \"Choose a lecture style\", value: \"placeholder-item\" },\n      { text: \"Hybrid\", value: \"Hybrid\" },\n      { text: \"InPerson\", value: \"InPerson\" },\n      { text: \"Remote\", value: \"Remote\" },\n    ];\n\n    this.submitHandler = (e) => {\n      var {\n        courseId,\n        courseName,\n        section,\n        school,\n        zoomLink,\n        days,\n        startDate,\n        endDate,\n        startTime,\n        startTimeSelect,\n        endTime,\n        endTimeSelect,\n        lectureStyle,\n      } = this.state;\n\n      let parsedDays = [];\n      for (const day in this.state.days) {\n        if (days[day]) {\n          parsedDays.push(day.slice(0, 3));\n        }\n      }\n\n      if (startTimeSelect == \"PM\") {\n        const [sh, sm] = startTime.split(\":\");\n        if (sh != 12) {\n          startTime = 12 + +sh + \":\" + sm;\n        }\n      }\n\n      if (endTimeSelect == \"PM\") {\n        const [eh, em] = endTime.split(\":\");\n        if (eh != 12) {\n          endTime = 12 + +eh + \":\" + em;\n        }\n      }\n\n      // console.log(courseId);\n      // console.log(courseName);\n      // console.log(section);\n      api\n        .createCourseStudent(\n          courseId,\n          courseName,\n          section,\n          school,\n          zoomLink,\n          parsedDays,\n          startDate,\n          endDate,\n          startTime,\n          endTime,\n          lectureStyle,\n          this.props.studentId\n        )\n        .then((res) => {\n          if (res == null) {\n            alert(\n              \"Unable to create course. Please screenshot form and send to dev team.\"\n            );\n            console.log(\"Unable to create course.\");\n          } else {\n            alert(\"Course succesfully created.\");\n            console.log(\"Course created.\");\n            console.log(res);\n          }\n        });\n\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const {\n      courseId,\n      courseName,\n      section,\n      zoomLink,\n      startTimeSelect,\n      endTimeSelect,\n    } = this.state;\n    console.log(this.state);\n    console.log(this.props);\n\n    return (\n      <div>\n        <Grid className=\"course-form\">\n          <Form onSubmit={this.submitHandler}>\n            <Row>\n              <h2>Create Course</h2>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"course-id-input\" legendText=\"Course ID\">\n                  <TextInput\n                    id=\"courseId\"\n                    value={courseId}\n                    helperText=\"Please provide the course ID (i.e. CS111)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  className=\"course-name-input\"\n                  legendText=\"Course Name\"\n                >\n                  <TextInput\n                    id=\"courseName\"\n                    value={courseName}\n                    helperText=\"Please provide the course name (i.e. Intro to Computer Science)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup className=\"section-input\" legendText=\"Section\">\n                  <TextInput\n                    id=\"section\"\n                    value={section}\n                    helperText=\"Please provide the course section (i.e. A1)\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"school-select\" legendText=\"Select School\">\n                  <Select\n                    value={this.state.school}\n                    onChange={this.onSchoolChange}\n                    id=\"school\"\n                    hideLabel={true}\n                  >\n                    {this.schoolOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup label=\"zoom-link-input\" legendText=\"Zoom Link\">\n                  <TextInput\n                    id=\"zoomLink\"\n                    value={zoomLink}\n                    helperText=\"Please provide the zoom link\"\n                    onChange={this.handleTextInputChange}\n                  />\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <Row>\n              <Column>\n                <FormGroup\n                  label=\"start-time-input\"\n                  legendText=\"Lecture Start Time\"\n                >\n                  <TimePicker\n                    id=\"startTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      value={startTimeSelect}\n                      labelText={\"Time of day\"}\n                      onChange={this.onStartTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup label=\"end-time-input\" legendText=\"Lecture End Time\">\n                  <TimePicker\n                    id=\"endTime\"\n                    onChange={this.handleTimeInput}\n                    placeholder=\"hh:mm\"\n                    maxLength={5}\n                  >\n                    <TimePickerSelect\n                      id=\"time-picker-select\"\n                      labelText={\"Time of day\"}\n                      value={endTimeSelect}\n                      onChange={this.onEndTimeSelect}\n                    >\n                      <SelectItem value=\"AM\" text=\"AM\" />\n                      <SelectItem value=\"PM\" text=\"PM\" />\n                    </TimePickerSelect>\n                  </TimePicker>\n                </FormGroup>\n              </Column>\n\n              <Column>\n                <FormGroup\n                  label=\"lecture-style-select\"\n                  legendText=\"Lecture Style\"\n                >\n                  <Select\n                    value={this.state.lectureStyle}\n                    onChange={this.onLectureStyleChange}\n                    hideLabel={true}\n                    id=\"lectureStyle\"\n                  >\n                    {this.lectureStyleOptions.map((option) => (\n                      <SelectItem text={option.text} value={option.value} />\n                    ))}\n                  </Select>\n                </FormGroup>\n              </Column>\n            </Row>\n\n            <FormGroup label=\"days-select\" legendText=\"Lecture Days\">\n              <Row>\n                <Column>\n                  <Checkbox\n                    id=\"Monday\"\n                    checked={this.state.days.Monday}\n                    className=\"checkbox-1\"\n                    labelText=\"Monday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Tuesday\"\n                    checked={this.state.days.Tuesday}\n                    className=\"checkbox-2\"\n                    labelText=\"Tuesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Wednesday\"\n                    checked={this.state.days.Wednesday}\n                    className=\"checkbox-3\"\n                    labelText=\"Wednesday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Thursday\"\n                    checked={this.state.days.Thursday}\n                    className=\"checkbox-4\"\n                    labelText=\"Thursday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n\n                <Column>\n                  <Checkbox\n                    id=\"Friday\"\n                    checked={this.state.days.Friday}\n                    className=\"checkbox-5\"\n                    labelText=\"Friday\"\n                    onChange={this.handleDaySelect}\n                  ></Checkbox>\n                </Column>\n              </Row>\n            </FormGroup>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import CreateCourseForm from \"./CreateCourseForm\";\nimport { useParams } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateCoursePage(props) {\n  return <CreateCourseForm studentId={props.location.state.user.id} />;\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Select,\n  SelectItem,\n  TimePicker,\n  TimePickerSelect,\n  DatePicker,\n  DatePickerInput,\n  Button,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react/\";\n\nimport api from \"../../apiHandle\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentForm(props) {\n  let [name, handleNameInput] = useState(\"\");\n  let [assignmentType, handleTypeInput] = useState(\"\");\n  let [dueDate, handleDueDateInput] = useState(\"\");\n  let [dueTime, handleDueTimeInput] = useState(\"\");\n  let [dueTimeSelect, handleDueTimeSelect] = useState(\"\");\n  let [courseSelect, handleCourseSelect] = useState(\"\");\n\n  const submitHandler = (event) => {\n    console.log(name);\n    console.log(assignmentType);\n    console.log(dueDate);\n    console.log(dueTime);\n    console.log(dueTimeSelect);\n  };\n\n  console.log(props);\n\n  return (\n    <div>\n      <Grid className=\"course-form\">\n        <Form onSubmit={(e) => submitHandler(e)}>\n          <Row>\n            <h2>Create Assignment</h2>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup className=\"name-input\" legendText=\"Name\">\n                <TextInput\n                  id=\"name\"\n                  value={name}\n                  labelText={false}\n                  helperText=\"Please provide the assignment name.\"\n                  onChange={(e) => {\n                    handleNameInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup\n                className=\"assignment-type-input\"\n                legendText=\"Assignment Type\"\n              >\n                <TextInput\n                  id=\"assignmentType\"\n                  value={assignmentType}\n                  labelText={false}\n                  helperText=\"Please provide the assignment type. i.e. Programming Assignment\"\n                  onChange={(e) => {\n                    handleTypeInput(e.target.value);\n                  }}\n                />\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Row>\n            <Column>\n              <FormGroup label=\"due-date-picker\" legendText=\"Due Date\">\n                <DatePicker datePickerType=\"simple\" dateFormat=\"yyyy-M-d\">\n                  <DatePickerInput\n                    placeholder=\"yyyy-m-d\"\n                    id=\"due-date-input\"\n                    value={dueDate}\n                    onChange={(e) => handleDueDateInput(e.target.value)}\n                  ></DatePickerInput>\n                </DatePicker>\n              </FormGroup>\n            </Column>\n\n            <Column>\n              <FormGroup label=\"due-time-input\" legendText=\"Time Due\">\n                <TimePicker\n                  id=\"dueTime\"\n                  value={dueTime}\n                  onChange={(e) => handleDueTimeInput(e.target.value)}\n                  placeholder=\"hh:mm\"\n                  maxLength={5}\n                >\n                  <TimePickerSelect\n                    id=\"time-picker-select\"\n                    labelText={\"Time of day\"}\n                    value={dueTimeSelect}\n                    onChange={(e) => {\n                      handleDueTimeSelect(e.target.value);\n                    }}\n                  >\n                    <SelectItem value=\"AM\" text=\"AM\" />\n                    <SelectItem value=\"PM\" text=\"PM\" />\n                  </TimePickerSelect>\n                </TimePicker>\n              </FormGroup>\n            </Column>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Grid>\n    </div>\n  );\n}\n","import CreateAssignmentForm from \"./CreateAssignmentForm\";\nimport { useLocation } from \"react-router\";\nimport \"./form.scss\";\n\nexport default function CreateAssignmentPage() {\n  const location = useLocation();\n\n  return <CreateAssignmentForm user={location.state.user} />;\n}\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport AssignmentCard from \"../../components/AssignmentCard\";\nimport \"./assignments.scss\";\n\nfunction ClassColumn(props) {\n  return (\n    <div className=\"class-column\">\n      <h3>{props.courseId}</h3>\n      <h5>{props.courseName}</h5>\n      {props.assignments.length !== 0 ? (\n        props.assignments\n          .sort((a1, a2) => a1.dueDate > a2.dueDate)\n          .map((assignment) => {\n            return <AssignmentCard {...assignment} expand=\"is-expanded\" />;\n          })\n      ) : (\n        <p>No upcoming assignments</p>\n      )}\n    </div>\n  );\n}\n\nexport default function AssignmentsView(props) {\n  const location = useLocation();\n  console.log(props);\n  const courses = props.user.courses;\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <div className=\"view-container\">\n        <h3>Assignments</h3>\n        <div className=\"class-container\">\n          {courses.map((c) => {\n            return <ClassColumn {...c}></ClassColumn>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import AssignmentsView from \"./AssignmentsView\";\nimport { useLocation } from \"react-router\";\n\nexport default function CreateAssignmentPage() {\n  const location = useLocation();\n\n  return <AssignmentsView user={location.state.user} />;\n}\n","import { parse, format } from \"date-fns\";\nimport React from \"react\";\nimport \"../pages/schedule/calendar.scss\";\n\nconst parseTime = (time) => {\n  const [hours, minutes] = time.split(\":\");\n\n  return (\n    (hours >= 13 ? hours - 12 : hours) +\n    \":\" +\n    (minutes == 0 ? \"00\" : minutes) +\n    (hours >= 12 ? \" PM\" : \" AM\")\n  );\n};\n\nexport default function ExamCard(props) {\n  const dueDate = format(\n    parse(props.dueDate, \"yyyy-MM-d\", new Date()),\n    \"MMM do\"\n  );\n  const dueTime = parseTime(props.dueTime);\n  console.log(props);\n\n  return props.size === \"small\" ? (\n    <div key={props.id} className=\"exam\">\n      <div>\n        <h4>{props.Course.courseId}</h4>\n        {/* <h6>{props.Course.courseName}</h6> */}\n        <h4>{props.name}</h4>\n        <br></br>\n        <h6>{\"Date: \" + dueDate}</h6>\n        <h6>{\"Time: \" + dueTime}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        {props.tags.map((t) => {\n          return <button className=\"tag\">{t}</button>;\n        })}\n      </div>\n    </div>\n  ) : (\n    <div key={props.id} className=\"exam\">\n      <div>\n        <h4>{props.Course.courseId}</h4>\n        {/* <h6>{props.Course.courseName}</h6> */}\n        <h4>{props.name}</h4>\n        <br></br>\n        <h6>{\"Date: \" + dueDate}</h6>\n        <h6>{\"Time: \" + dueTime}</h6>\n      </div>\n\n      <div\n        className=\"xtra-info\"\n        style={{ display: props.expand === \"is-expanded\" ? \"block\" : \"none\" }}\n      >\n        {props.tags.map((t) => {\n          return <button className=\"tag\">{t}</button>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport HeaderNav from \"../../components/HeaderNav\";\nimport ExamCard from \"../../components/ExamCard\";\nimport \"./exams.scss\";\n\nfunction ClassColumn(props) {\n  return (\n    <div className=\"class-column\">\n      <h3>{props.courseId}</h3>\n      <h5>{props.courseName}</h5>\n      {props.exams.length !== 0 ? (\n        props.exams\n          .sort((e1, e2) => e1.dueDate > e2.dueDate)\n          .map((exam) => {\n            return <ExamCard {...exam} expand=\"is-expanded\" />;\n          })\n      ) : (\n        <p>No upcoming exams</p>\n      )}\n    </div>\n  );\n}\n\nexport default function ExamsView(props) {\n  const location = useLocation();\n  console.log(props);\n  const courses = props.user.courses;\n\n  return (\n    <div className=\"App\">\n      <HeaderNav user={location.state.user} />\n      <div class=\"view-container\">\n        <h3>Exams</h3>\n        <div class=\"class-container\">\n          {courses.map((c) => {\n            return <ClassColumn {...c}></ClassColumn>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import ExamsView from \"./ExamsView\";\nimport { useLocation } from \"react-router\";\n\nexport default function ExamsPage() {\n  const location = useLocation();\n\n  return <ExamsView user={location.state.user} />;\n}\n","import \"./App.scss\";\n// import React, { useState, useEffect } from 'react';\n// import { Content } from \"carbon-components-react\";\nimport SchedulePage from \"./pages/schedule/SchedulePage\";\nimport LoginPage from \"./pages/login/LoginPage\";\nimport SignupPage from \"./pages/signup/SignupPage\";\nimport CreateCoursePage from \"./pages/createCourse/CreateCoursePage\";\nimport CreateAssignmentPage from \"./pages/createAssignment/CreateAssignmentPage\";\nimport AssignmentsPage from \"./pages/assignments/AssignmentsPage\";\nimport ExamsPage from \"./pages/exams/ExamsPage\";\n\n// import HomePage from \"./pages/home/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignupPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/createCourse\" component={CreateCoursePage} />\n          <Route path=\"/createAssignment\" component={CreateAssignmentPage} />\n          <Route path=\"/schedule\" component={SchedulePage} />\n          <Route path=\"/assignments\" component={AssignmentsPage} />\n          <Route path=\"/exams\" component={ExamsPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n// import 'node_modules/core-js/modules/es7.array.includes';\n// import 'node_modules/core-js/modules/es6.array.fill';\n// import 'node_modules/core-js/modules/es6.string.includes';\n// import 'node_modules/core-js/modules/es6.string.trim';\n// import 'node_modules/core-js/modules/es7.object.values';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}