{"version":3,"sources":["components/Day.js","features/calendar/Calendar.js","components/HeaderNav.js","App.js","reportWebVitals.js","index.js"],"names":["Day","className","this","props","today","date","React","Component","Calendar","state","Date","days","console","log","day_list","i","day","addDays","getDate","push","Grid","narrow","Row","Column","format","lg","md","sm","Slider","ariaLabelInput","max","min","value","onChange","setState","map","el","HeaderNav","Header","aria-label","HeaderName","href","prefix","SideNav","isFixedNav","expanded","isChildOfHeader","App","Content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAaeA,E,4JANX,WACI,OACI,sBAAKC,UAAWC,KAAKC,MAAMC,MAAQ,OAAS,QAA5C,cAAuDF,KAAKC,MAAME,Y,GAL5DC,IAAMC,WCiFTC,G,wDAvEX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,CACTL,MAAO,IAAIM,KACXC,KAAK,GAJK,E,yDAQlB,WACI,OAAST,KAAKO,MAAME,KAAO,I,mBAG/B,WACIC,QAAQC,IAAI,mC,oBAIhB,WAGI,IAHK,IAAD,OACEC,EAAW,GAERC,EAAI,EAAGA,EAAIb,KAAKO,MAAME,KAAMI,IAAK,CACtC,IAAIC,EAAY,IAAND,EAAU,cAAC,EAAD,CAAaX,OAAO,EAAMC,KAAOY,YAAQf,KAAKO,MAAML,MAAOW,GAAGG,WAApDH,GAC1B,cAAC,EAAD,CAAaX,OAAO,EAAOC,KAAOY,YAAQf,KAAKO,MAAML,MAAOW,GAAGG,WAArDH,GACdD,EAASK,KAAKH,GAGlB,OACI,sBAAKf,UAAU,mBAAf,UACI,wCACA,eAACmB,EAAA,EAAD,CAAMnB,UAAU,qBAAqBoB,QAAQ,EAA7C,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACKC,YAAOtB,KAAKO,MAAML,MAAO,aAE9B,eAACmB,EAAA,EAAD,CAAQE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA1B,UACI,cAACC,EAAA,EAAD,CACAC,eAAe,aACf5B,UAAU,cACV6B,IAAK,EACLC,IAAK,EACLC,MAAO,EACPC,SAAU,gBAAGD,EAAH,EAAGA,MAAH,OAAe,EAAKE,SAAS,CAACvB,KAAMqB,OAE9C,6BAAK9B,KAAKO,MAAME,aAGxB,cAACW,EAAA,EAAD,UAIKR,EAASqB,KAAI,SAAAC,GAAE,OACZ,cAACb,EAAA,EAAD,UACEa,mB,GArDP9B,IAAMC,Y,wBCWd8B,MAlBf,WAEI,OACI,qBAAKpC,UAAU,MAAf,SACI,eAACqC,EAAA,EAAD,CAAQC,aAAW,aAAnB,UACA,cAACC,EAAA,EAAD,CAAYC,KAAK,IAAIC,OAAO,QAA5B,qBACA,cAACC,EAAA,EAAD,CAASC,YAAU,EACnBC,UAAU,EACVC,iBAAiB,U,QCQdC,MAbf,WAEE,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC+C,EAAA,EAAD,UACA,cAAC,EAAD,UCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.89c9e683.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Day extends React.Component {\n\n\n    render() {\n        return(\n            <div className={this.props.today ? 'blue' : 'black'}> {this.props.date}</div>\n        )\n }}\n\nexport default Day\n","import React from 'react'\nimport { \n    Slider,\n    Grid,\n    Row,\n    Column\n } from 'carbon-components-react'\nimport { addDays, format } from 'date-fns'\nimport Day from '../../components/Day'\nimport './calendar.scss'\n\n\n\nclass Calendar extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            today: new Date(),\n            days:3\n        }\n    }\n\n    shouldComponentUpdate(){\n        return ( this.state.days > 0)\n    }\n\n    hello() {\n        console.log('I was triggered during render');\n\n    }\n\n    render(){\n        const day_list = []\n\n        for (let i = 0; i < this.state.days; i++) {\n            let day = i === 0 ? <Day key={i} today={true} date={ addDays(this.state.today, i).getDate()}/> :\n                <Day key={i} today={false} date={ addDays(this.state.today, i).getDate()}/> \n            day_list.push(day)\n        }\n\n        return(\n            <div className=\"contain-calendar\">\n                <h3>wattup</h3>\n                <Grid className=\"bx--grid calendar \" narrow={true}>\n                    <Row>\n                        <Column>\n                            {format(this.state.today, 'MM.d.yy')}\n                        </Column>\n                        <Column lg={4} md={2} sm={0}>\n                            <Slider\n                            ariaLabelInput=\"day slider\"\n                            className=\"day-slider \"\n                            max={5}\n                            min={1}\n                            value={3}\n                            onChange={({ value }) => this.setState({days: value})}\n                            />\n                            <h5>{this.state.days}</h5>\n                        </Column>\n                    </Row>\n                    <Row>\n                        \n                        \n\n                        {day_list.map(el => \n                            <Column> \n                             {el}\n                            </Column>\n                        )}\n                    </Row>\n                    \n                </Grid>\n\n            </div>\n            \n            \n            \n            \n        )\n    }\n\n\n\n}\n\nexport default Calendar","import { \n    Header, \n    HeaderName, \n    SideNav,\n} from 'carbon-components-react';\n\nfunction HeaderNav() {\n\n    return (\n        <div className=\"App\">\n            <Header aria-label=\"Cadre home\">\n            <HeaderName href=\"#\" prefix=\"Cadre\">[hello]</HeaderName>\n            <SideNav isFixedNav\n            expanded={false}\n            isChildOfHeader={true}>\n            </SideNav>\n\n            </Header>\n            \n            \n        </div>\n    );\n}\n\nexport default HeaderNav;","\nimport './App.scss';\n// import getHello from \"./apiHandle\"\n// import React, { useState, useEffect } from 'react';\nimport Calendar from './features/calendar/Calendar'\nimport HeaderNav from './components/HeaderNav'\nimport { Content } from 'carbon-components-react';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <HeaderNav/>\n      <Content>\n      <Calendar/>\n      </Content>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// import 'node_modules/core-js/modules/es7.array.includes';\n// import 'node_modules/core-js/modules/es6.array.fill';\n// import 'node_modules/core-js/modules/es6.string.includes';\n// import 'node_modules/core-js/modules/es6.string.trim';\n// import 'node_modules/core-js/modules/es7.object.values';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}