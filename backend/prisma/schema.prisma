// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  id        Int       @default(autoincrement()) @id
  email     String    @db.VarChar(100)  
  firstName String    @db.VarChar(100) 
  lastName  String    @db.VarChar(100) 
  courses   Course[]
  labs      Lab[]
}

model Professor {
  id        Int       @default(autoincrement()) @id
  email     String    @db.VarChar(100) 
  firstName String    @db.VarChar(100) 
  lastName  String    @db.VarChar(100) 
  courses   Course[]
  labs      Lab[]
}



model Course {
  id            Int         @default(autoincrement()) @id
  courseId      String
  courseName    String      
  section       String?       
  school        String?      
  zoomLink      String?    
  students      Student[]   
  professor     Professor[] 
  days          String[]    
  startDate     DateTime    @db.Date
  endDate       DateTime    @db.Date
  startTime     DateTime    @db.Timetz()
  endTime       DateTime    @db.Timetz()
  lectures      Lecture[] 
  labs          Lab[]

  @@unique([courseId, courseName, section])
}

model Lab {
  id          Int         @id @default(autoincrement())
  instructors Professor[] 
  courseId    Int?
  course      Course?     @relation(fields: [courseId], references: [id])
  section     String?    
  labStyle    labStyle    @default(Hybrid) 
  days        String[]    
  startDate   DateTime    @db.Date
  endDate     DateTime    @db.Date
  startTime   DateTime    @db.Timetz()
  endTime     DateTime    @db.Timetz()  
  zoomLink    String?    
  students    Student[] 
}

enum labStyle {
  InPerson
  Hybrid
  Remote
}

model Lecture {
  id            Int              @default(autoincrement()) @id
  lectureStyle  lectureStyle     @default(Hybrid)
  courseId      Int?
  course        Course?          @relation(fields: [courseId], references: [id])
  zoomLink      String?     
  day           String?           
  lectureDate   DateTime         @db.Date 
  startTime     DateTime?        @db.Timestamptz()
  endTime       DateTime?        @db.Timestamptz()
}

enum lectureStyle {
  InPerson
  Hybrid
  Remote
}



